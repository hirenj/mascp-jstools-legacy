var MASCP=MASCP||{};if(Object.defineProperty&&!MASCP.IE8&&!function(){var a=[],b=!1;Object.defineProperty(MASCP,"ready",{get:function(){return 0!==a.length||b?function(){a.forEach(function(a){a.call()})}:!1},set:function(c){return c===!1||c===!0?(a=[],c&&(b=!0),b):b?void c.call():void a.push(c)}})}(),MASCP.Service=function(a,b){},"undefined"!=typeof module&&module.exports){var events=require("events");singletonemitter=new events.EventEmitter,MASCP.Service.emit=function(a,b){singletonemitter.emit(a,b)},MASCP.Service.removeAllListeners=function(a,b){b?singletonemitter.removeListeners(a,b):singletonemitter.removeAllListeners(a)},MASCP.Service.removeListener=function(a,b){singletonemitter.removeListener(a,b)},MASCP.Service.addListener=function(a,b){singletonemitter.addListener(a,b)};var bean={add:function(a,b,c){if("error"==b&&(b="MASCP.error"),a.addListener)a.addListener(b,c);else{var d=function(){var b=Array.prototype.slice.call(arguments);b[0]===a&&(b.shift(),c.apply(a,b))};a._listeners=a._listeners||{},a._listeners[b]||(a._listeners[b]={}),a._listener||(a._listener=new events.EventEmitter),a._listeners[b][c]&&(d=a._listeners[b][c]),a._listener.addListener(b,d),a._listeners[b][c]=d}},remove:function(a,b,c){"error"==b&&(b="MASCP.error"),c&&a.removeListener?a.removeListener(b,c):c?(a._listeners&&a._listeners[b]&&a._listeners[b][c]&&(a._listener.removeListener(b,a._listeners[b][c]),delete a._listeners[b][c]),0==a._listener.listeners(b).length&&(a._listeners[b]={})):a.removeAllListeners&&"undefined"==typeof c&&a.removeAllListeners(b)},fire:function(a,b,c){"error"==b&&(b="MASCP.error"),a.emit?a.emit.apply(a,[b].concat(c)):a._listener&&a._listener.emit.apply(a._listener,[b,a].concat(c))}};MASCP.events=new events.EventEmitter,module.exports=MASCP;var parser=require("jsdom").jsdom,XMLHttpRequest=require("xmlhttprequest").XMLHttpRequest;Object.defineProperty(XMLHttpRequest.prototype,"responseXML",{get:function(){return parser((this.responseText||"").replace(/&/g,"&amp;"))},set:function(){}}),XMLHttpRequest.prototype.customUA="MASCP Gator crawler (+http://gator.masc-proteomics.org/)"}else{window.MASCP=MASCP;var ie=function(){var a,b=3,c=document.createElement("div"),d=c.getElementsByTagName("i");do c.innerHTML="<!--[if gt IE "+ ++b+"]><i></i><![endif]-->";while(d[0]);return b>4?b:a}();ie&&(7===ie&&(MASCP.IE=!0,MASCP.IE7=!0),8===ie&&(MASCP.IE=!0,MASCP.IE8=!0),9==ie&&(MASCP.IE=!0,MASCP.IE9=!0),MASCP.IE=!0)}if(MASCP.buildService=function(a){var b=function(a,c){return"undefined"!=typeof c?this._endpointURL=c:this._endpointURL=b.SERVICE_URL,this.agi=a,this};return b.Result=function(b){return a.apply(this,[b]),this},b.prototype=MASCP.extend(new MASCP.Service,{__class__:b,__result_class:b.Result,_endpointURL:null}),b.Result.prototype=MASCP.extend(new MASCP.Service.Result,{__class__:b.Result}),b.Result.prototype=MASCP.extend(b.Result.prototype,a.apply({},[])),b.toString=function(){for(var a in MASCP)if(this===MASCP[a])return"MASCP."+a},b},MASCP.cloneService=function(a,b){var c=MASCP.buildService(function(){return this});return c.Result=a.Result,c.prototype=new a,MASCP[b]=c,c.prototype.__class__=c,c},function(){var a={},b=function(b,c,d){if(c){if("liveClass"==c.type){var e=MASCP[b];return void d.call(null,null,c,new e(null,c.url))}if("gatorURL"==c.type){var f=new MASCP.UserdataReader(null,b);return f.datasetname=c.title,f.requestData=function(){var a=this.agi.toLowerCase(),c=b.split("#")[0],d="/"==c.slice(-1)?c+a:c+"/"+a;return{type:"GET",dataType:"json",url:d,data:{agi:a,service:this.datasetname}}},void d.call(null,null,c,f)}if("data"==c.type){var f=new MASCP.UserdataReader;return f.map=function(a){var b={};for(var c in a)"retrieved"!=c&&"title"!=c&&(a[c].data?b[c]=a:b[c]={data:a[c]},b[c].retrieved=a.retrieved,b[c].title=a.title);return b},f.bind("ready",function(){d.call(null,null,c,f)}),void f.setData(b,c.data)}if("reader"==c.type)return void d.call(null,null,c,c.reader);if("dataset"==c.type){var g=MASCP.GatorDataReader.createReader(b);return g.bind("ready",function(){h&&h.terminate(),d.call(null,null,c,g),d=function(){}}),void g.bind("error",function(a){d.call(null,{error:a},c),d=function(){}})}if(c.parser_function){if(!JSandbox||!/^(https?:)?\/?\//.test(b))return console.log("No sandbox support - not trying to get data for "+c.title),void d.call(null,{error:"No sandbox support"});var h,i=new JSandbox;i.eval("var sandboxed_parser = "+c.parser_function+";",function(){var e=this;return h=function(a,b){e.eval({data:"sandboxed_parser(input.datablock)",input:{datablock:a},callback:function(a){b.call(null,a),e.terminate()},onerror:function(a){console.log("Parser error"),b.call(null,null)}})},h.callback=!0,h.terminate=function(){i&&i.terminate()},/^(https?:)?\/?\//.test(b)?void MASCP.Service.request(b,function(e,f){if(e)return void d.call(null,{error:e},c);var g=new MASCP.UserdataReader(null,null);return g.datasetname=c.title,a[b]?(MASCP.Service.CacheService(g),void d.call(null,null,c,g)):(a[b]=!0,g.bind("ready",function(){h&&h.terminate(),d.call(null,null,c,g)}),g.bind("error",function(a){h&&h.terminate(),d.call(null,{error:a},c)}),void MASCP.Service.ClearCache(g,null,function(a){return a?void bean.fire(g,"error",[a]):(g.map=h,void g.setData(c.title,f))}))}):void 0})}}};MASCP.IterateServicesFromConfig=function(a,c){if(a)for(var d in a)b(d,a[d],c)}}(),MASCP.extend=function(a,b){for(var c in b)a[c]=b[c];return a},MASCP.extend(MASCP.Service.prototype,{agi:null,result:null,__result_class:null,async:!0}),MASCP.Service.prototype._dataReceived=function(a,b){if(!a)return!1;var c=this.__result_class;if(a&&a.error&&""!=a.error&&null!==a.error)return bean.fire(this,"error",[a.error]),!1;if("[object Array]"===Object.prototype.toString.call(a)){for(var d=0;d<a.length;d++)arguments.callee.call(this,a[d],b);0===d&&(this.result=new c),this.result._raw_data={data:a}}else if(this.result){try{c.call(this.result,a)}catch(e){return bean.fire(this,"error",[e]),!1}this.result._raw_data||(this.result._raw_data=a)}else{var f;try{f=new c(a)}catch(g){return bean.fire(this,"error",[g]),!1}f._raw_data||(f._raw_data=a),this.result=f}return a&&a.retrieved&&(this.result.retrieved=a.retrieved,this.result._raw_data.retrieved=a.retrieved),this.result.agi=this.agi,!0},MASCP.Service.prototype.gotResult=function(){var a=this,b=function(b){b.readers||(b.readers=[]),b.readers.push(a.toString())};bean.add(MASCP,"layerRegistered",b),bean.add(MASCP,"groupRegistered",b),bean.fire(a,"resultReceived");try{bean.remove(MASCP,"layerRegistered",b),bean.remove(MASCP,"groupRegistered",b)}catch(c){}bean.fire(MASCP.Service,"resultReceived")},MASCP.Service.prototype.requestComplete=function(){bean.fire(this,"requestComplete"),bean.fire(MASCP.Service,"requestComplete",[this])},MASCP.Service.prototype.requestIncomplete=function(){bean.fire(this,"requestIncomplete"),bean.fire(MASCP.Service,"requestIncomplete",[this])},MASCP.Service.registeredLayers=function(a){var b=[];for(var c in MASCP.layers)if(MASCP.layers.hasOwnProperty(c)){var d=MASCP.layers[c];d.readers&&d.readers.indexOf(a.toString())>=0&&b.push(d)}return b},MASCP.Service.registeredGroups=function(a){var b=[];for(var c in MASCP.groups)if(MASCP.groups.hasOwnProperty(c)){var d=MASCP.groups[c];d.readers&&d.readers.indexOf(a.toString())>=0&&b.push(d)}return b},MASCP.Service.prototype.bind=function(a,b){return bean.add(this,a,b),this},MASCP.Service.prototype.unbind=function(a,b){return bean.remove(this,a,b),this},function(a){var b=function(a){var b=[];for(var c in a)a.hasOwnProperty(c)&&b.push(c+"="+a[c]);return b.join("&")},c=function(a){a.async=!0;var c=null;if(!a.url)return void a.success.call(null,null);var d=new XMLHttpRequest;if("GET"==a.type&&a.data){var e=a.url.indexOf("?");e==a.url.length-1&&(a.url=a.url.slice(0,-1),e=-1);var f=e>=0?"&":"?";a.url=a.url.replace(/\?$/,"")+f+b(a.data)}d.open(a.type,a.url,a.async),"POST"==a.type&&(d.setRequestHeader("Content-Type",a.content?a.content:"application/x-www-form-urlencoded"),c=a.content?a.data:b(a.data)),d.customUA&&d.setRequestHeader("User-Agent",d.customUA),a.auth&&d.setRequestHeader("Authorization","Bearer "+a.auth);var g=5;return d.onreadystatechange=function(b){if(4==d.readyState){if(d.status>=300&&d.status<400&&g>0){var e=d.getResponseHeader("location").replace(/location:\s+/,"");return g-=1,d.open("GET",e,a.async),void d.send()}if(503==d.status)return d.last_wait=2*(a.last_wait||500),void setTimeout(function(){d.open(a.type,a.url,a.async),"POST"==a.type&&d.setRequestHeader("Content-Type",a.content?a.content:"application/x-www-form-urlencoded"),d.customUA&&d.setRequestHeader("User-Agent",d.customUA),d.send(c)},a.last_wait);if(403==d.status){var f=d.getResponseHeader("Server");if("AmazonS3"===f)return void a.success.call(null,{error:"No data"},403,d)}if(d.status>=200&&d.status<300){var h;h="xml"==a.dataType?"undefined"!=typeof document?document.implementation.createDocument(null,"nodata",null):{getElementsByTagName:function(){return[]}}:{};try{d.responseText;h="xml"==a.dataType?d.responseXML||MASCP.importNode(d.responseText):"txt"==a.dataType?d.responseText:JSON.parse(d.responseText)}catch(i){return"unexpected_eos"==i.type?void a.success.call(null,{},d.status,d):void a.error.call(null,d.responseText,d,{error:i.type||i.message,stack:i})}if(202==d.status&&"RUNNING"==h.status)return void setTimeout(function(){d.open(a.type,a.url,a.async),"POST"==a.type&&d.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),d.customUA&&d.setRequestHeader("User-Agent",d.customUA),d.send(c)},5e3);a.success.call(null,h,d.status,d),h=null}else a.error.call(null,d.responseText,d,d.status)}},MASCP.NETWORK_FAIL&&MASCP.NETWORK_FAIL.enabled?void setTimeout(function(){console.log("Causing network failure"),d={onreadystatechange:d.onreadystatechange},d.readyState=4,d.status=MASCP.NETWORK_FAIL.status||500,d.responseText="Intercepted by Network Failure simulator",d.onreadystatechange()},1e3):void d.send(c)};MASCP.Service.request=function(a,b,e){var f=MASCP.IE?d:c;MASCP.IE&&!a.match(/^https?\:/)&&(f=c);var g;return a?("string"==typeof a?g={async:!0,url:a,timeout:5e3,type:"GET",error:function(a,c,d){b.call(null,{status:d})},success:function(a,c,d){b.call(null,null,a)}}:a.hasOwnProperty("url")&&(g=a,g.success=function(a){b.call(null,null,a)},g.error=function(a,c,d){b.call(null,{status:d})}),e&&(g.dataType="txt","xml"===e&&(g.dataType="xml")),void f.call(null,g)):void b(null)};var d=function(a){var c=new XDomainRequest,d=!1,e=0;for(c.onerror=function(b){a.error(c,c,{message:"XDomainRequest error"})},c.onprogress=function(){},c.open("GET",a.url+"?"+b(a.data)),c.onload=function(){if(d=!0,"xml"==a.dataType){var b=new ActiveXObject("Microsoft.XMLDOM");b.async=!1,b.loadXML(c.responseText),a.success(b,"success",c)}else if("json"==a.dataType){var e=null;try{e=JSON.parse(c.responseText)}catch(f){a.error(c,c,{message:"JSON parsing error"})}e&&a.success(e,"success",c)}else a.success(c.responseText,"success",c)},setTimeout(function(){c.send()},0);!a.async&&!d&&3>e;)alert("This browser does not support synchronous requests, click OK while we're waiting for data"),e+=1;a.async||d||alert("No data")};a.retrieve=function(a,b){var e=this;if(MASCP.Service._current_reqs=MASCP.Service._current_reqs||0,MASCP.Service._waiting_reqs=MASCP.Service._waiting_reqs||0,MASCP.Service.MAX_REQUESTS){var f=arguments.callee;if(MASCP.Service._current_reqs>MASCP.Service.MAX_REQUESTS)return MASCP.Service._waiting_reqs+=1,bean.add(MASCP.Service,"requestComplete",function(){bean.remove(this,"requestComplete",arguments.callee),setTimeout(function(){MASCP.Service._waiting_reqs-=1,f.call(e,a,b)},0)}),this}if(a&&(this.agi=a),a&&b){this.agi=a,this.result=null;var g=!1,h=function(a,c){bean.remove(e,"resultReceived",h),bean.remove(e,"error",h),bean.remove(e,"requestComplete",h),g||(a?b.call(e,a):b.call(e)),g=!0};bean.add(e,"resultReceived",h),bean.add(e,"error",h),bean.add(e,"requestComplete",h)}var i=this.requestData();if(i!==!1){if(!i)return bean.fire(e,"error",["No request data"]),bean.fire(MASCP.Service,"requestComplete",[e]),this.requestComplete(),this;var j={async:this.async,url:i.url||this._endpointURL,timeout:5e3,error:function(a,b,c){MASCP.Service._current_reqs-=1,"string"==typeof c&&(c={error:c,request:b}),isNaN(c)||(c={error:"Reqeust error",status:c,request:b}),bean.fire(e,"error",[c]),bean.fire(MASCP.Service,"requestComplete"),e.requestComplete()},success:function(a,b,c){if(MASCP.Service._current_reqs-=1,c&&null!==c.status&&0===c.status)return bean.fire(e,"error",[{error:"Zero return status from request "}]),void e.requestComplete();var d=e._dataReceived(a,b);d&&e.gotResult(),null!==d&&"undefined"!=typeof d?e.requestComplete():e.requestIncomplete()}};return MASCP.extend(j,i),MASCP.IE?d(j):c(j),MASCP.Service._current_reqs+=1,this}}}(MASCP.Service.prototype),function(a){var b,c,d,e,f,g,h,i,j,k,l,m=0,n=0;a.BeginCaching=function(){a.CacheService(a.prototype)},a.SetMinimumAge=function(a){n=0===a?0:a.getTime()},a.SetMaximumAge=function(a){m=0===a?0:a.getTime()},a.SweepCache=function(a){a||(a=new Date),h(a.getTime())},a.CacheService=function(a){if(!(a.prototype&&a.prototype.retrieve.caching||a.retrieve.caching)){var d,e=a.retrieve;a.retrieve=function(a,f){var g=this,h=a?a:g.agi;if(!h)return e.call(g,h,f),g;if(h=h.toLowerCase(),g.agi=h,g.avoid_database){if(d)return;return d=g._dataReceived,g._dataReceived=function(){return function(a){var b=d.call(this,a),e=g.agi;return b&&this.result&&null!==this.result._raw_data&&c(e,this.toString(),this.result._raw_data||{}),a={},b}}(),void f.call(g)}return d&&!g.avoid_database?(g._dataReceived=d,d=null,void f.call(g)):(b(h,g.toString(),function(a,b){if(b){if(f){g.result=null;var d=function(a){bean.remove(g,"resultReceived",arguments.callee),bean.remove(g,"error",arguments.callee),f.call(g,a)};bean.add(g,"resultReceived",d),bean.add(g,"error",d)}var i=g._dataReceived(b,"db");i&&g.gotResult(),null!==i?g.requestComplete():g.requestIncomplete()}else{var j=g._dataReceived;g._dataReceived=function(){return function(a,b){var d=j.call(this,a,b);return d&&this.result&&null!==this.result._raw_data&&c(h,this.toString(),this.result._raw_data||{}),this._dataReceived=null,this._dataReceived=j,a={},d}}();var k=g._endpointURL;0!==m&&(g._endpointURL=null),e.call(g,h,f),g._endpointURL=k}}),g)},a.retrieve.caching=!0}},a.FindCachedService=function(a,b){var c=a.toString();return d(c,b),!0},a.CachedAgis=function(a,b){var c=a.toString();return i(c,b),!0},a.FirstAgi=function(a,b){var c=a.toString();return l(c,b),!0},a.ClearCache=function(a,b,c){var d=a.toString();return c||(c=function(){}),e(d,b,c),!0},a.HistoryForService=function(a,b){var c=a.toString();g(c,null,b)},a.Snapshot=function(a,b,c,d){var e=a.toString();get_snapshot(e,null,c,d)};var o=0,p=[];a.BulkOperation=function(a){o++;var b=function(a){a||(a=function(){}),o--,p.push(a),0==o&&k(function(a){p.forEach(function(b){b(a)}),p=[]})};return j(a,b),b};var q,r,s=function(a){var o,p=[];j=function(a,b){return null!=o?(setTimeout(function(){a.call({transaction:b})},0),!1):(o=c,c=function(a,b,c){p.push([a,b,c])},setTimeout(function(){a.call({transaction:b})},0),!0)},k=function(b){if(null===o)return void b(null);c=o,o=null;var d=a.transaction(["cached"],"readwrite"),e=d.objectStore("cached");for(d.oncomplete=function(a){b(null)},d.onerror=function(a){b(a.target.errorCode)};p.length>0;){var f=p.shift(),g=f[0],h=f[1],i=f[2];if(!("object"!=typeof i||"Object"!==i.constructor.name||"undefined"!=typeof Document&&i instanceof Document)){var j=i.retrieved?i.retrieved:new Date;"string"==typeof j&&(j=new Date(j)),j.setUTCHours(0),j.setUTCMinutes(0),j.setUTCSeconds(0),j.setUTCMilliseconds(0);var k=q(g,h),l=j.getTime();i.id=[g,h,l],i.acc=g,i.service=h,window.msIndexedDB&&(i.serviceacc=h+g),i.retrieved=l;var m=e.put(i);m.onerror=k}}};var q=function(a,b){return function(a,b){}};c=function(b,c,d){var e=a.transaction(["cached"],"readwrite"),f=e.objectStore("cached");if(!("object"!=typeof d||"undefined"!=typeof Document&&d instanceof Document)){var g=d.retrieved?d.retrieved:new Date;"string"==typeof g&&(g=new Date(g)),g.setUTCHours(0),g.setUTCMinutes(0),g.setUTCSeconds(0),g.setUTCMilliseconds(0);var h=q(b,c),i=g.getTime();d.id=[b,c,i],d.acc=b,window.msIndexedDB&&(d.serviceacc=c+b),d.service=c,d.retrieved=i;var j=f.put(d);j.onerror=h}},b=function(a,b,c){var d=m?[n,m]:[n,(new Date).getTime()];return f(a,b,d,c)},f=function(b,c,d,e){if(!b)return void e.call();var f=a.transaction(["cached"],"readonly"),g=f.objectStore("cached"),h=g.index(window.msIndexedDB?"entries-ms":"entries"),i=-1,j=null,k=IDBKeyRange.only(window.msIndexedDB?c+b:[b,c]);h.openCursor(k).onsuccess=function(a){var f=a.target.result;if(f){var g=window.msIndexedDB?f.value.retrieved:f.primaryKey[2],h=window.msIndexedDB?f.value.acc:f.primaryKey[0],k=window.msIndexedDB?f.value.service:f.primaryKey[1];g>=d[0]&&g<=d[1]&&g>i&&h==b&&k==c&&(j=f.value,i=g,j.retrieved=new Date(g)),f["continue"]()}else e.call(null,null,j)}},h=function(b){var c=a.transaction(["cached"],"readwrite"),d=c.objectStore("cached"),e=d.index("timestamps");e.openKeyCursor(null,"nextunique").onsuccess=function(a){var c=a.target.result;c&&(b>=c.key[1]&&d["delete"](c.primaryKey),c["continue"]())}},g=function(b,c,d){c&&"object"==typeof c&&c.length||(c=[0,(new Date).getTime()]);var e=a.transaction(["cached"],"readonly"),f=e.objectStore("cached"),g=f.index("timestamps"),h=[];g.openKeyCursor(null,"nextunique").onsuccess=function(a){var e=a.target.result;e?(e.key[0]==b&&c[0]<=e.key[1]&&c[1]>=e.key[1]&&h.push(new Date(parseInt(e.key[1]))),e["continue"]()):d.call(null,h)}},e=function(b,c,d){var e=a.transaction(["cached"],"readwrite"),f=e.objectStore("cached"),g=f.index("services"),h=IDBKeyRange.only(b);g.openCursor(h).onsuccess=function(a){var b=a.target.result;b&&(c&&b.value.acc!=c||(window.msIndexedDB?f["delete"](b.value.serviceacc):f["delete"](b.value.id?b.value.id:b.primaryKey)),b["continue"]())},e.oncomplete=function(){d.call(MASCP.Service)}},d=function(b,c){var d=a.transaction(["cached"],"readonly"),e=d.objectStore("cached"),f=e.index("services"),g=[],h=IDBKeyRange.only(b);f.openKeyCursor(h,"nextunique").onsuccess=function(a){var b=a.target.result;b?(g.push(b.key),b["continue"]()):c.call(MASCP.Service,g)}},l=function(b,c){var d=a.transaction(["cached"],"readonly"),e=d.objectStore("cached"),f=e.index("services"),g=IDBKeyRange.only(b);f.openCursor(g,"nextunique").onsuccess=function(a){var b=a.target.result;b?c.call(MASCP.Service,b.value.acc):c.call(MASCP.Service,null)}},i=function(b,c){var d=a.transaction(["cached"],"readonly"),e=d.objectStore("cached"),f=e.index("services"),g=[],h=IDBKeyRange.only(b);f.openCursor(h).onsuccess=function(a){var b=a.target.result;b?(g.push(b.value.acc),b["continue"]()):c.call(MASCP.Service,g)}}},t=function(a){if(a.all('SELECT version from versions where tablename = "datacache"',function(b,c){var d=c&&c.length>0?c[0].version:null;return 1.3==d?(MASCP.events&&MASCP.events.emit("ready"),void(MASCP.ready?(MASCP.ready(),MASCP.ready=!0):MASCP.ready=!0)):((!d||""==d||1>d)&&(a.exec("CREATE TABLE if not exists versions (version REAL, tablename TEXT);"),a.exec('CREATE TABLE if not exists "datacache" (agi TEXT,service TEXT,retrieved REAL,data TEXT);',function(a){if(a&&"Error: not an error"!=a)throw a}),a.exec('DELETE FROM versions where tablename = "datacache"'),a.exec('INSERT INTO versions(version,tablename) VALUES(1.1,"datacache");',function(a,b){}),d=1.1),1.2>d&&(a.exec("DROP TABLE if exists datacache_tmp;"),a.exec("CREATE TABLE if not exists datacache_tmp (acc TEXT,service TEXT,retrieved REAL,data TEXT);"),a.exec("INSERT INTO datacache_tmp(acc,service,retrieved,data) SELECT agi,service,retrieved,data FROM datacache;"),a.exec("DROP TABLE datacache;"),a.exec("ALTER TABLE datacache_tmp RENAME TO datacache;"),a.exec("CREATE INDEX accessions on datacache(acc);"),a.exec("CREATE INDEX accessions_service on datacache(acc,service);"),a.exec('DELETE FROM versions where tablename = "datacache"'),a.exec('INSERT INTO versions(version,tablename) VALUES(1.2,"datacache");',function(a,b){}),d=1.2),void(1.3>d&&(a.exec("CREATE INDEX if not exists services on datacache(service);"),a.exec('DELETE FROM versions where tablename = "datacache"'),a.exec('INSERT INTO versions(version,tablename) VALUES(1.3,"datacache");',function(a,b){a||(MASCP.events&&MASCP.events.emit("ready"),MASCP.ready?(MASCP.ready(),MASCP.ready=!0):MASCP.ready=!0)}),d=1.3)))}),"undefined"!=typeof module&&module.exports){var o=null;j=function(c,d){return null!==o?(c.call({transaction:d}),!1):(a.exec("PRAGMA synchronous=OFF; PRAGMA journal_mode=OFF;",function(a){return a?void c.call(null,a):(o=b,b=function(a,b,c){setTimeout(function(){c.call(null,null)},0)},void c.call({transaction:d}))}),!0)},k=function(c){return null===o?void c():void a.exec("PRAGMA synchronous=FULL; PRAGMA journal_mode=DELETE;",function(a){b=o,o=null,c(a)})}}else j=function(a,b){a.call({transaction:b})},k=function(a){a()};h=function(b){a.all("DELETE from datacache where retrieved <= ? ",[b],function(){})},e=function(b,c,d){var e=b;e+="%",c?a.all("DELETE from datacache where service like ? and acc = ?",[e,c.toLowerCase()],function(){d.call(MASCP.Service)}):a.all("DELETE from datacache where service like ? ",[e],function(){d.call(MASCP.Service)})},d=function(b,c){a.all("SELECT distinct service from datacache where service like ? ",[b+"%"],function(a,b){var d={};b&&b.length>0&&b.forEach(function(a){d[a.service]=!0});var e=[];for(var f in d)d.hasOwnProperty(f)&&e.push(f);return c.call(MASCP.Service,e),e})},l=function(b,c){a.all("SELECT distinct acc from datacache where service = ? limit 1",[b],function(a,b){!b||b.length<1?c.call(MASCP.Service,null):c.call(MASCP.Service,b[0].acc)})},i=function(b,c){a.all("SELECT distinct acc from datacache where service = ?",[b],function(a,b){for(var d=[],e=0;e<b.length;e++)d.push(b[e].acc);c.call(MASCP.Service,d)})},get_snapshot=function(b,c,d,e){c&&"object"==typeof c&&c.length||(c=[0,(new Date).getTime()]);var f,g=[b,c[0],c[1]];if(d&&Array.isArray(d)){var h=new Array(d.length+1).join(",?").substring(1);g=g.concat(d),f="SELECT * from datacache where service = ? AND retrieved >= ? AND retrieved <= ? AND acc in ("+h+") ORDER BY retrieved ASC"}else d&&/^\d+$/.test(d.toString())?(f="SELECT * from datacache where service = ? AND retrieved >= ? AND retrieved <= ? LIMIT ? ORDER BY retrieved ASC",g=g.concat(parseInt(d.toString()))):f="SELECT * from datacache where service = ? AND retrieved >= ? AND retrieved <= ? ORDER BY retrieved ASC";a.all(f,g,function(a,b){b=b||[];var c={};b.forEach(function(a){var b="string"==typeof a.data?JSON.parse(a.data):a.data;b&&(b.retrieved=new Date(parseInt(a.retrieved))),c[a.acc]&&c[a.acc].retrieved>a.retrieved||(c[a.acc]=a)}),e.call(null,null,c)})},b=function(a,b,c){var d=m?[n,m]:[n,(new Date).getTime()];return f(a,b,d,c)};var p=function(a,b){return function(a,b){}};c=function(b,c,d){if(!("object"!=typeof d||"undefined"!=typeof Document&&d instanceof Document)){var e;try{e=JSON.stringify(d)}catch(f){return}var g=d.retrieved?d.retrieved:new Date;"string"==typeof g&&(g=new Date),g.setUTCHours(0),g.setUTCMinutes(0),g.setUTCSeconds(0),g.setUTCMilliseconds(0);var h=g.getTime();d={},a.all("INSERT INTO datacache(acc,service,retrieved,data) VALUES(?,?,?,?)",[b,c,h,e],p(b,c))}},f=function(b,c,d,e){var f="SELECT * from datacache where acc=? and service=? and retrieved >= ? and retrieved <= ? ORDER BY retrieved DESC LIMIT 1",g=[b,c,d[0],d[1]];a.all(f,g,function(a,b){if(b&&b.length>0&&"undefined"!=typeof b[0]){var c="string"==typeof b[0].data?JSON.parse(b[0].data):b[0].data;c&&(c.retrieved=new Date(parseInt(b[0].retrieved))),e.call(null,null,c)}else e.call(null,null,null)})},g=function(b,c,d){c&&"object"==typeof c&&c.length||(c=[0,(new Date).getTime()]);var e="SELECT distinct retrieved from datacache where service=? and retrieved >= ? and retrieved <= ? ORDER BY retrieved ASC",f=[b,c[0],c[1]];a.all(e,f,function(a,b){var c=[];if(b&&b.length>0&&"undefined"!=typeof b[0])for(var e=b.length-1;e>=0;e--)c.push(new Date(parseInt(b[e].retrieved)));d.call(null,c)})}},u=function(){h=function(a){if("localStorage"in window){for(var b=[],c=0,d=localStorage.length;d>c;c++)b.push(localStorage.key(c));for(var e=b.shift();e;){if(new RegExp("^MASCP.*").test(e)){var f=localStorage[e];if(f&&"string"==typeof f){var g=JSON.parse(f);g.retrieved=a,localStorage.removeItem(e)}}e=b.shift()}}},e=function(a,b,c){if("localStorage"in window){for(var d=[],e=0,f=localStorage.length;f>e;e++)d.push(localStorage.key(e));for(var g=d.shift();g;){if(new RegExp("^"+a+".*"+(b?"#"+b.toLowerCase()+"$":"")).test(g)&&(localStorage.removeItem(g),b))return;g=d.shift()}c.call(MASCP.Service)}},d=function(b,c){var d={};if("localStorage"in window)for(var e,f=new RegExp("^"+b+".*"),g=0,h=localStorage.length;h>g;g++)e=localStorage.key(g),f.test(e)&&(d[e.replace(/\.#.*$/g,"")]=!0);var i=[];for(var j in d)d.hasOwnProperty(j)&&i.push(j);return c.call(a,i),i},l=function(b,c){if("localStorage"in window)for(var d,e=new RegExp("^"+b),f=0,g=localStorage.length;g>f;f++)if(d=localStorage.key(f),e.test(d))return d=d.replace(b,""),void c.call(a,d);c.call(a,null)},i=function(b,c){if("localStorage"in window)for(var d,e=new RegExp("^"+b),f=0,g=localStorage.length;g>f;f++)d=localStorage.key(f),e.test(d)&&(d=d.replace(b,""),results[d]=!0);var h=[];for(var i in results)results.hasOwnProperty(i)&&h.push(i);c.call(a,h)},b=function(a,b,c){var d=localStorage[b.toString()+".#"+(a||"").toLowerCase()];if(d&&"string"==typeof d){var e=JSON.parse(d);e.retrieved=new Date(parseInt(e.retrieved)),c.call(null,null,e)}else c.call(null,null,null)},c=function(a,b,c){c&&("object"!=typeof c||c instanceof Document||c.nodeName)||(c.retrieved=(new Date).getTime(),localStorage[b.toString()+".#"+(a||"").toLowerCase()]=JSON.stringify(c))},f=function(a,c,d,e){return b(a,c,e)},g=function(a,b,c){c.call(null,[])},j=function(a){setTimeout(function(){a.call()},0)},k=function(a){setTimeout(function(){a()},0)},MASCP.events&&MASCP.events.emit("ready"),setTimeout(function(){MASCP.ready?(MASCP.ready(),MASCP.ready=!0):MASCP.ready=!0},100)};if("undefined"!=typeof window&&(window.indexedDB=window.indexedDB||window.webkitIndexedDB||window.mozIndexedDB||window.msIndexedDB,window.indexedDB||delete window.indexedDB),"undefined"!=typeof module&&module.exports){var v=require("sqlite3");q=new v.Database("cached.db"),process.env.SKIP_VACUUM||q.exec("VACUUM;")}else if("openDatabase"in window||"indexedDB"in window)if("indexedDB"in window){"webkitIndexedDB"in window&&(window.IDBTransaction=window.webkitIDBTransaction,window.IDBKeyRange=window.webkitIDBKeyRange,window.IDBCursor=window.webkitIDBCursor);var w=function(a,b){var c=b.db;c.objectStoreNames&&c.objectStoreNames.contains("cached")&&c.deleteObjectStore("cached");var d=window.msIndexedDB?"serviceacc":"id",e=c.createObjectStore("cached",{keyPath:d});e.createIndex("entries",["acc","service"],{unique:!1}),window.msIndexedDB&&e.createIndex("entries-ms","serviceacc",{unique:!1}),e.createIndex("timestamps",["service","retrieved"],{unique:!1}),e.createIndex("services","service",{unique:!1}),b.oncomplete=function(){z(c),z=function(){}}};r=!0;var x=2,y=indexedDB.open("datacache",x);y.onupgradeneeded=function(a){var b=y.transaction;w(a.oldVersion,b)};var z=function(a){a&&(r=a),s(r),MASCP.events&&MASCP.events.emit("ready"),MASCP.ready?(MASCP.ready(),MASCP.ready=!0):MASCP.ready=!0};y.onerror=function(a){console.log("Error loading Database"),u()},y.onsuccess=function(a){r=a.target.result;var b=x;if(r.version!=Number(b)){var c=q.setVersion(ver);c.onsuccess=function(a){var b=c.result;w(oldVersion,b)}}else z()}}else{try{q=openDatabase("cached","","MASCP Gator cache",1048576)}catch(A){throw A}q.all=function(a,b,c){this.exec(a,b,c)},q.exec=function(a,b,c){var d=this,e=b,f=c;"undefined"==typeof f&&e&&"[object Array]"!=Object.prototype.toString.call(e)&&(f=b,e=null),d.transaction(function(b){b.executeSql(a,e,function(a,b){for(var c=[],d=0;d<b.rows.length;d++)c.push(b.rows.item(d));f&&f.call(q,null,c)},function(a,b){f&&f.call(q,b)})})}}"undefined"!=typeof r||("undefined"!=typeof q?t(q):"localStorage"in window?u():(h=function(a){},e=function(a,b){},d=function(a,b){},i=function(b,c){c.call(a,[])},b=function(a,b,c){c.call(null,null,null)},c=function(a,b,c){},f=function(a,b,c,d){d.call(null,[])},g=function(a,b,c){c.call(null,[])},j=function(a,b){setTimeout(function(){a({transaction:b})},0)},k=function(a){setTimeout(function(){a()},0)}))}(MASCP.Service),MASCP.Service.prototype.setAsync=function(a){return this.async=a,this},MASCP.Service.prototype.requestData=function(){},MASCP.Service.prototype.toString=function(){for(var a in MASCP)if(this.__class__==MASCP[a])return"MASCP."+a},MASCP.Service.prototype.registerSequenceRenderer=function(a,b){return this.setupSequenceRenderer&&(this.renderers=this.renderers||[],this.setupSequenceRenderer(a,b),this.renderers.push(a)),a.trigger("readerRegistered",[this]),this},MASCP.Service.prototype.resetOnResult=function(a,b,c){var d=this,e=function(){d.unbind("resultReceived",e),a.bind("resultsRendered",f)},f=function(e){e===d&&(a.unbind("resultsRendered",f),b.forEach(function(b){a.remove(c,b)}))};this.bind("resultReceived",e)},MASCP.Service.prototype.setupSequenceRenderer=function(a){return this},MASCP.Service.importNode=function(a){if("undefined"==typeof document)return a;var b;return"string"==typeof a?(b=document.createElement("div"),b.innerHTML=a,b.firstChild):document.importNode?document.importNode(a,!0):(b=document.createElement("div"),b.innerHTML=a.xml,b.firstChild)},MASCP.Service.Result=function(){},MASCP.Service.Result.prototype={agi:null,reader:null},MASCP.Service.Result.prototype.render=function(){},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.AccessionReader=MASCP.buildService(function(a){return this._data=a||{data:["",""]},this}),MASCP.AccessionReader.SERVICE_URL="http://gator.masc-proteomics.org/tair.pl",MASCP.AccessionReader.prototype.requestData=function(){return{type:"GET",dataType:"json",data:{agi:this.agi,accession:this.accession,service:"tair"}}},MASCP.AccessionReader.Result.prototype.getDeletions=function(){return[]},MASCP.AccessionReader.prototype.setupSequenceRenderer=function(a){var b=this;this.bind("resultReceived",function(){var c=b.accession.split(","),d=c.shift(),e=b.result.length?b.result.shift():b.result;for(MASCP.registerGroup("all_insertions"),MASCP.registerGroup("all_deletions"),a.registerLayer("insertions",{fullname:"Accession",color:"#ff0000"}),a.createGroupController&&a.createGroupController("insertions","all_insertions"),console.log(e);e;){var f=a.sequence,g=e.getSequence(),h=(new diff_match_patch).diff_main(f,g),i=1,j=[],k=[];if(h.length<=1)e=b.result.length?b.result.shift():null,d=c.shift();else{var l="all_"+d;a.registerLayer(l,{fullname:d,group:"all_insertions"});var m;for(m=h.length-1;m>=0;m--)m>0&&h[m-1][0]<=0&&(i+=h[m-1][1].length,i>a.sequence.length&&(i=a.sequence.length)),-1==h[m][0]&&k.push({index:i,delta:h[m][1]}),1==h[m][0]&&j.push({insertBefore:i,delta:h[m][1]});for(m=j.length-1;m>=0;m--)a.getAA(j[m].insertBefore-1).addAnnotation(l,1,{border:"rgb(150,0,0)",content:j[m].delta}),a.getAA(j[m].insertBefore-1).addAnnotation("insertions",1,{border:"rgb(150,0,0)",content:j[m].delta});for(m=k.length-1;m>=0;m--)a.getAA(k[m].index).addAnnotation(l,1,{angle:90,border:"rgb(0,0,150)",content:k[m].delta}),a.getAA(k[m].index).addAnnotation("insertions",1,{angle:90,border:"rgb(0,0,150)",content:k[m].delta});e=b.result.length?b.result.shift():null,d=c.shift()}}})},MASCP.AccessionReader.Result.prototype.getDescription=function(){return this._data.data[1]},MASCP.AccessionReader.Result.prototype.getSequence=function(){return"object"==typeof this._data&&this._data.length?this._data[0].data[2]:this._data.data[2]},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.ArbitraryDataReader=MASCP.buildService(function(a){return this._raw_data=a,this}),MASCP.ArbitraryDataReader.SERVICE_URL="http://gator.masc-proteomics.org/datasets.pl?",
MASCP.ArbitraryDataReader.prototype.requestData=function(){var a=this.agi,b=this._dataset();return b?{type:"GET",dataType:"json",data:{agi:a,dataset:b,service:"ArbitraryData"}}:{type:"GET",dataType:"json",data:{service:"ArbitraryData"}}},MASCP.ArbitraryDataReader.prototype._extend=function(a){if(null===this||"object"!=typeof this||"undefined"==typeof a||!a)return this;var b=new MASCP.ArbitraryDataReader;return b._endpointURL=this._endpointURL,b.agi=this.agi,b.toString=function(){var c=MASCP.Service.prototype.toString.call(b);return c+"."+a},b._dataset=function(){return a},b.layer=function(){return"arbitrary_"+a},b},MASCP.ArbitraryDataReader.prototype._dataset=function(){return null},MASCP.ArbitraryDataReader.prototype.retrieve=function(a,b){var c=this,d=this.agi||a;if(d&&this._dataset())return void MASCP.Service.prototype.retrieve.call(c,a,b);if(!this._SERVER_DATASETS&&d&&"dummy"!=d){var e=new MASCP.ArbitraryDataReader("",c._endpointURL);return void e.retrieve("dummy",function(){this.result?c._SERVER_DATASETS=this.result._raw_data.data:c._SERVER_DATASETS=[],c.retrieve(a,b)})}return this._SERVER_DATASETS?0==this._SERVER_DATASETS.length?(MASCP.Service.prototype.retrieve.call(c,"dummy",b),void(c.renderers||[]).forEach(function(a){a.trigger("resultsRendered",[c])})):void this._SERVER_DATASETS.forEach(function(a){var e=c._extend(a);(c.renderers||[]).forEach(function(a){e.setupSequenceRenderer(a),a.bind("resultsRendered",function(b){b==e&&a.trigger("resultsRendered",[c])})}),e.bind("resultReceived",function(){c.gotResult()}),e.bind("requestComplete",function(){c.requestComplete()}),e.retrieve(d,b)}):void MASCP.Service.FindCachedService(c.toString(),function(a){if(a.length>=0){var d=[];a.forEach(function(a){d.push(a.replace(c.toString()+".",""))}),c._SERVER_DATASETS=d,c.result={},c.result._raw_data={data:d}}c._endpointURL&&c._endpointURL.length&&MASCP.Service.ClearCache(c),MASCP.Service.prototype.retrieve.call(c,"dummy",b)})},MASCP.ArbitraryDataReader.Result=MASCP.ArbitraryDataReader.Result,MASCP.ArbitraryDataReader.Result.prototype.getPeptides=function(){return this._peptides?this._peptides:this._raw_data&&this._raw_data.data?this._raw_data.data:[]},MASCP.ArbitraryDataReader.prototype.setupSequenceRenderer=function(a){var b=this;if(this._dataset()){var c=".active .overlay { background: #ff5533; } .active a { color: #000000; text-decoration: none !important; }  :indeterminate { background: #ff0000; } .tracks .active { background: #0000ff; } .inactive a { text-decoration: none; } .inactive { display: none; }";return this.bind("resultReceived",function(){var d=this.result.getPeptides();if(d.length<=0)return void a.trigger("resultsRendered",[b]);MASCP.registerGroup("arbitrary_datasets",{fullname:"Other data",color:"#ff5533"}),MASCP.registerLayer("arbitrary_controller",{fullname:"Other data",color:"#ff5533",css:c});var e=this.layer();MASCP.registerLayer(e,{group:"arbitrary_datasets",fullname:this._dataset(),color:this.result._raw_data.color||"#ff5533",css:c}),this.result._raw_data.url&&(MASCP.getLayer(e).href=this.result._raw_data.url);for(var f=0;f<d.length;f++){var g,h=d[f];"string"==typeof h?(g=a.getAminoAcidsByPeptide(h),g.addToLayer(e)):2==h.length&&a.getAA(h[0]).addBoxOverlay(e,h[1]-h[0])}a.createGroupController&&a.createGroupController("arbitrary_controller","arbitrary_datasets"),a.trigger("resultsRendered",[b])}),this}},MASCP.ArbitraryDataReader.Result.prototype.render=function(){},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.AtChloroReader=MASCP.buildService(function(a){return this._raw_data=a,this}),MASCP.AtChloroReader.SERVICE_URL="http://prabi2.inrialpes.fr/at_chloro/annotation/",MASCP.AtChloroReader.prototype.requestData=function(){var a=this.agi;return{type:"GET",url:this._endpointURL+a.toUpperCase(),dataType:"json",data:{agi:a.toUpperCase(),service:"atchloro"}}},MASCP.AtChloroReader.Result=MASCP.AtChloroReader.Result,MASCP.AtChloroReader.Result.prototype.getPeptides=function(){if(this._peptides)return this._peptides;if(this._long_name_map={},!this._raw_data||!this._raw_data.peptides)return[];for(var a=[],b=0;b<this._raw_data.peptides.length;b++){var c=this._raw_data.peptides[b],d={sequence:this._cleanSequence(c.sequence)};a.push(d)}return this._peptides=a,a},MASCP.AtChloroReader.Result.prototype._cleanSequence=function(a){return a.replace(/[^A-Z]/g,"")},MASCP.AtChloroReader.prototype.setupSequenceRenderer=function(a){var b=this,c=".active .overlay { background: #55ff33; } .active a { color: #000000; text-decoration: none !important; }  :indeterminate { background: #ff0000; } .tracks .active { background: #0000ff; } .inactive a { text-decoration: none; } .inactive { display: none; }";return this.bind("resultReceived",function(){var d=this.result.getPeptides();d.length>0&&(MASCP.registerLayer("atchloro_experimental",{fullname:"AT_CHLORO MS/MS",color:"#55ff33",css:c}),MASCP.getLayer("atchloro_experimental").href="http://prabi2.inrialpes.fr/at_chloro/protein/"+b.agi.toUpperCase());for(var e=0;e<d.length;e++){var f=d[e].sequence,g=a.getAminoAcidsByPeptide(f);g.addToLayer("atchloro_experimental")}a.trigger("resultsRendered",[b])}),this},MASCP.AtChloroReader.Result.prototype.render=function(){},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.AtPeptideReader=MASCP.buildService(function(a){return this._raw_data=a,this}),MASCP.AtPeptideReader.SERVICE_URL="http://gator.masc-proteomics.org/atpeptide.pl?",MASCP.AtPeptideReader.prototype.requestData=function(){var a=this.agi;return{type:"GET",dataType:"json",data:{agi:a,service:"atpeptide"}}},MASCP.AtPeptideReader.Result.prototype.tissues=function(){return this._tissues},MASCP.AtPeptideReader.Result=MASCP.AtPeptideReader.Result,MASCP.AtPeptideReader.Result.prototype.getPeptides=function(){if(this._peptides)return this._peptides;if(this._tissues=[],this.spectra={},this._long_name_map={},!this._raw_data||!this._raw_data.peptides)return[];for(var a=[],b=function(){return this.sequence},c=this._raw_data.peptides.length-1;c>=0;c--){var d=this._raw_data.peptides[c],e={sequence:this._cleanSequence(d.sequence),tissues:[]};e.toString=b,a.push(e);for(var f=d.tissues.length-1;f>=0;f--){var g=d.tissues[f];if(this._tissues.indexOf(g["PO:tissue"])<0){var h=g["PO:tissue"];this._tissues.push(h),h.long_name=g.tissue,this._long_name_map[h]=g.tissue}e.tissues.push(g["PO:tissue"]),this.spectra[g["PO:tissue"]]||(this.spectra[g["PO:tissue"]]=0),this.spectra[g["PO:tissue"]]+=1}}return this._peptides=a,a},MASCP.AtPeptideReader.Result.prototype._cleanSequence=function(a){return a.replace(/[^A-Z]/g,"")},MASCP.AtPeptideReader.prototype.setupSequenceRenderer=function(a){var b=this;return this.bind("resultReceived",function(){MASCP.registerGroup("atpeptide_experimental",{fullname:"AtPeptide MS/MS",hide_member_controllers:!0,hide_group_controller:!0,color:"#ff5533"});var c="atpeptide_controller",d=".active .overlay { background: #ff5533; } .active a { color: #000000; text-decoration: none !important; }  :indeterminate { background: #ff0000; } .tracks .active { background: #0000ff; } .inactive a { text-decoration: none; } .inactive { display: none; }";MASCP.registerLayer(c,{fullname:"AtPeptide MS/MS",color:"#ff5533",css:d}),a.createGroupController&&a.createGroupController("atpeptide_controller","atpeptide_experimental");for(var e=this.result.getPeptides(),f=0;f<this.result.tissues().length;f++){var g=this.result.tissues()[f];MASCP.registerLayer("atpeptide_peptide_"+g,{fullname:this.result._long_name_map[g],group:"atpeptide_experimental",color:"#ff5533",css:d});for(var h=0;h<e.length;h++){var i=e[h].sequence;if(!(e[h].tissues.indexOf(g+"")<0)){var j=a.getAminoAcidsByPeptide(i),k="atpeptide_peptide_"+g;j.addToLayer(k),j.addToLayer(c)}}}a.trigger("resultsRendered",[b])}),this},MASCP.AtPeptideReader.Result.prototype.render=function(){},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(function(){var a=function(a){for(var b=a.split("\n"),c=[],d=b.length-1;d>=0;d--)b[d].match(/^#/)||c.push(b[d].replace(/"/g,"").split(/\t/));return c.reverse()};MASCP.CddRunner=MASCP.buildService(function(b){if(this._raw_data=b,b&&"string"==typeof b){var c=this,d=a(b),e=!1;c._raw_data={data:{}},d.forEach(function(a){if(12==a.length){if(!e)return void(e=!0);c._raw_data.data[a[7]]||(c._raw_data.data[a[7]]={peptides:[]});var b=c._raw_data.data[a[7]];b.peptides.push([a[3],a[4]]),b.name=a[8],b.description=a[11]}})}return this})}(),MASCP.CddRunner.SERVICE_URL="http://www.ncbi.nlm.nih.gov/Structure/bwrpsb/bwrpsb.cgi?",MASCP.CddRunner.prototype.requestData=function(){var a=this;bean.fire(a,"error",["CDD live retrieving is disabled"])},function(a){var b=a.prototype._dataReceived;a.prototype._dataReceived=function(a,c){if(null===a)return b.call(this,null,c);if("object"==typeof a){if(a.status&&"RUNNING"==a.status){var d=this;return bean.fire(d,"running"),setTimeout(function(){d.retrieve(d.agi)},5e3),void console.log("Got back running status")}return b.call(this,a,c)}var e,f=/^#cdsid\t([a-zA-Z0-9-]+)/m;if("string"==typeof a&&!this.job_id&&(e=f.exec(a))){var d=this;return this.job_id=e[1],void d.retrieve(this.agi)}if(f=/^#status\tsuccess/m,f.exec(a))return this.job_id=null,b.call(this,a,c);if(f=/#status\t3/m,f.exec(a)){var d=this;return void setTimeout(function(){d.retrieve(d.agi)},5e3)}return b.call(this,a,c)}}(MASCP.CddRunner),"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(function(){var a=!1;MASCP.DomainRetriever=MASCP.buildService(function(a){return this._raw_data=a,this}),MASCP.DomainRetriever.prototype.requestData=function(){var a=this._endpointURL;if(Array.isArray(a))return this.requestDataWithUniprot();var b=this.agi.toLowerCase(),c="/"==a.slice(-1)?a+b:a+"/"+b;return{type:"GET",dataType:"json",url:c,data:{agi:b}}},MASCP.DomainRetriever.prototype.requestDataWithUniprot=function(){var a=this,b=this._endpointURL,c={},d=function(a,b){var c;for(c in b.data)a.data[c]=b.data[c];return a},e=function(b){return b&&"No data"!==b?(bean.fire(a,"error",[b]),bean.fire(MASCP.Service,"requestComplete"),a.requestComplete(),void(e=function(){})):void(c.uniprot&&c.full&&(a._dataReceived(d(c.uniprot,c.full)),a.gotResult(),a.requestComplete()))};return b.forEach(function(b){var d,f="uniprot";b.indexOf("uniprot")>=0?d=new MASCP.UniprotDomainReader:(f="full",d=new MASCP.DomainRetriever(null,b)),d.retrieve(a.agi,function(a){a?c[f]={}:c[f]=this.result._raw_data,e(a)})}),!1},MASCP.DomainRetriever.getRawData=function(a,b){if("gatorURL"===a.type)return void b.call({error:"Can't get raw data from GATOR URL, missing accession"});if("googleFile"===a.type)return void e(a,function(a,c){return a?void b.call(null,a):void b.call(null,null,c.getData(),c.permissions,c.owner)});if("url"===a.type){sessionStorage.wanted_domains||(sessionStorage.wanted_domains="{}");var c=JSON.parse(sessionStorage.wanted_domains);if(c[a.url])return void b.call(null,null,JSON.parse(c[a.url]));MASCP.Service.request(a.url,function(a,c){return a?void b.call(null,a):void b.call(null,null,c)})}};var b=function(a,c,d){if(a&&Array.isArray(a)){var f=[].concat(a),g=f.shift();return void b(g,c,function(a,e){if(a){if(g=f.shift())return void b(g,c,arguments.callee);d.call(null,a,e)}else d.call(null,a,e)})}if("gatorURL"===a.type){var h=new MASCP.UserdataReader(null,a.url);h.requestData=MASCP.DomainRetriever.prototype.requestData,h.retrieve(c,function(a){if(a)return"string"==typeof a&&(a={error:a}),void d.call(null,a);var b=null;this.result&&(b=this.result._raw_data.data.domains),d.call(null,null,b)})}if("googleFile"===a.type&&e(a,function(a,b){if(a)return void d.call(null,a);var e=b.getData();if(c in e){var f=[],g=JSON.parse(e[c]);for(var h in g)g.hasOwnProperty(h)&&f.push(h.replace("dom:",""));d.call(null,null,g?f:null)}else d.call(null,{error:"No data"},null)}),"url"===a.type){sessionStorage.wanted_domains||(sessionStorage.wanted_domains="{}");var i=JSON.parse(sessionStorage.wanted_domains);if(i[a.url])return void d.call(null,null,JSON.parse(i[a.url])[c]);MASCP.Service.request(a.url,function(a,b){return a?void d.call(null,a):void d.call(null,null,b?b[c]:null)})}},c=function(a,b){return a&&Array.isArray(a)&&(a=a[0]),"googleFile"===a.type?void e(a,function(a,c){return a?void b.call(null,a):void b.call(null,null,c.permissions.write)}):void b.call(null,null,!1)},d={},e=function(a,b){var c="",e="application/json",f={};"string"==typeof a.file?(c=a.file,f=a.file):(c=a.file.file_id,f={id:a.file.file_id},e="application/json; data-type=domaintool-domains");var g=d[c];return g?g.ready?void b.call(null,null,g):void bean.add(g,"ready",function(){bean.remove(g,"ready",arguments.callee),b.call(null,null,g)}):void(d[c]=(new MASCP.GoogledataReader).getSyncableFile(f,b,e))},f=function(a,b){return a&&Array.isArray(a)&&(a=a[0]),"googleFile"===a.type?void e(a,function(a,c){return a?void b.call(null,a):(b.call(null,null,c.getData()),void c.sync())}):void b.call()},g=function(a,c){var d=this,e=function(b){return function(){var e=d.result._raw_data.data;h(e,b,a,function(b){c(a,b)})}};e([]);d.preferences.getPreferences(function(c,d){d&&d.accepted_domains&&b(d.accepted_domains,a,function(a,b){if(a){if(403==a.status)return void e([])();if("No data"!==a.error)return void console.log("Some problem");b=null}e(b)()})})},h=function(a,b,c,d){var e={};if(!b)return d.call(null,a),a;a=a||{};for(var f in a)if(a.hasOwnProperty(f)){var g=f.replace(/\s/g,"_");b.indexOf(g)>=0&&(e[f]=a[f]),g.match(/GlcNAc/)&&(e[f]=a[f])}return a["tmhmm-TMhelix"]&&(e["tmhmm-TMhelix"]=a["tmhmm-TMhelix"]),d.call(null,e),e},i=function(b,c,d,e,f,g,h){var i=e||d.toString();MASCP.registerLayer(i,{fullname:"All domains",color:"#aaaaaa"},[b]);var j=[];for(var k in c)j.push(k);j.sort(function(a,b){return"SIGNALP"==a?1:"SIGNALP"==b?-1:"tmhmm-TMhelix"==a?1:"tmhmm-TMhelix"==b?-1:a.localeCompare(b)});var l={};j.forEach(function(d){var e="dom:"+d;e=e.replace(/\s/g,"_"),"KDEL"==d&&c[d].peptides.push([b.sequence.length-3,b.sequence.length]);var j=c[d].name;if("tmhmm-TMhelix"==d&&(j="TM Transmembrane"),"tmhmm-outside"!=d&&"tmhmm-inside"!=d){MASCP.registerLayer(e,{fullname:j||d,color:"#aaaaaa"},[b]),b.trackOrder.push(e),a&&b.showLayer(e);var k=!1,m={};c[d].peptides.forEach(function(a){var j=parseInt(a[0]),n=parseInt(a[1]);if(!isNaN(j)&&!m[j]){if("tmhmm-TMhelix"==d&&c.SIGNALP){var o=parseInt(c.SIGNALP.peptides[0][1]);if(o>=n||o>=j)return}if(m[j]=!0,l[e]||(l[e]=[]),l[i]||(l[i]=[]),j==n){var p=/N\-linked.*GlcNAc/.test(d)?"glcnac(b1-4)glcnac":/GlcNAc/.test(d)?"glcnac":/GalNAc/.test(d)?"galnac":/Fuc/.test(d)?"fuc":/Man/.test(d)?"man":/Glc\)/.test(d)?"glc":/Gal[\.\)]/.test(d)?"gal":/Hex[\.\)]/.test(d)?"hex":/HexNAc/.test(d)?"hexnac":/Xyl/.test(d)?"xyl":"?",q=8;"glcnac(b1-4)glcnac"!=p&&p!=b.small_galnac&&"xyl"!=p&&p!=b.fuc||(q+=8),/Potential/.test(d)&&"glcnac(b1-4)glcnac"==p&&(p+=".potential"),l[i].push({aa:j,type:"marker",options:{height:q,content:"#"+h+"_"+p,offset:f+12,angle:0,bare_element:!0}}),l[e].push({aa:j,type:"marker",options:{height:8,content:"#"+h+"_"+p,offset:12,bare_element:!0}})}else{c[d].name||(c[d].name=d);var r=c[d].name.replace(/\s/g,"_");if(window.DOMAIN_DEFINITIONS&&window.DOMAIN_DEFINITIONS[r]){var s=window.DOMAIN_DEFINITIONS[r],t=b.gradients.length>0?"url('#grad_"+s[1]+"')":s[1];l[i].push({aa:j,type:"shape",width:n-j+1,options:{offset:f,height:g,shape:s[0],fill:t,rotate:s[2]||0}}),l[e].push({aa:j,type:"shape",width:n-j+1,options:{shape:s[0],fill:'url("#grad_'+s[1]+'")'}})}else l[i].push({aa:j,type:"box",width:n-j+1,options:{offset:f,height:g}}),l[e].push({aa:j,type:"box",width:n-j+1,options:{}});l[i].push({aa:j,type:"text",width:n-j+1,options:{txt:c[d].name,height:g-2,offset:f+1,fill:"#111",stroke:"#999"}})}k=!0}})}}),b.renderObjects(i,l[i]),b.showLayer(i),b.trigger("resultsRendered"),b.zoom-=1e-4},j=function(a,b){var c=a.navigation.isEditing();b||(a.trackOrder.forEach(function(b){b.match(/^dom\:/)&&(c?a.showLayer(b):a.hideLayer(b))}),a.refresh())},k=function(a){var b=this;b.preferences.getPreferences(function(b,c){c&&c.accepted_domains&&f(c.accepted_domains,function(b,c){c[a]=null})})};MASCP.DomainRetriever.prototype.setupSequenceRenderer=function(a,b){var c=this;l.call(c,a),c.bind("resultReceived",function(){c.acc=c.agi,g.call(c,c.agi,function(c,d){var e={gotResult:function(){i(a,d,c,b.track,b.offset,b.height||8,b.icons?b.icons.namespace:null),bean.add(a.navigation,"toggleEdit",function(){j.enabled&&j(a)}),j(a,!0),a.trigger("domainsRendered")},acc:c};a.trigger("readerRegistered",[e]),e.gotResult()})})};var l=function(a){var b=this;b.preferences.getPreferences(function(d,e){a.clearDataFor=function(a){},c(e.accepted_domains,function(c,d){if(d){a.clearDataFor=function(a){k.call(b,a)},j.enabled=!0;var e=function(c){return console.log("Order changed"),c.indexOf((b.acc||"").toUpperCase())==c.length-1&&c.length>0||1==c.length&&c[0]==b.acc.toUpperCase()?(console.log(b.acc),void a.clearDataFor(b.acc)):void(a.trackOrder.length>0&&(console.log("Removed layer"),m.call(b,a,b.acc)))};bean.add(a,"sequenceChange",function(){bean.remove(a,"orderChanged",e)}),bean.add(a,"orderChanged",e)}})})},m=function(a,b){var c=this,d={};a.trackOrder.forEach(function(b){b.match(/^dom\:/)&&a.isLayerActive(b)&&(d[b]=1)});var e=JSON.stringify(d);c.preferences.getPreferences(function(a,c){c&&c.accepted_domains&&f(c.accepted_domains,function(a,c){c[b]=e})})}}(),"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(function(){MASCP.EditableReader=MASCP.buildService(function(a){return this._raw_data=a,this}),MASCP.EditableReader.prototype.retrieve=function(a){a&&(this.acc=a,this.agi=a),bean.fire(this,"resultReceived")};var a=function(a){var b=[];return Object.keys(a).forEach(function(c){if("symbol_map"!==c&&"tag_map"!==c&&a[c]&&Array.isArray(a[c])){a[c];a[c].forEach(function(a){a.acc=c}),b=b.concat(a[c])}}),b},b=function(a){var b={};return a.forEach(function(a){a.acc&&(b[a.acc]||(b[a.acc]=[]),b[a.acc].push(a))}),b},c=function(a){var b=0,c=0;return a||(a=window.event),a.pageX||a.pageY?(b=a.pageX-(document.body.scrollLeft+document.documentElement.scrollLeft),c=a.pageY-(document.body.scrollTop+document.documentElement.scrollTop)):(a.clientX||a.clientY)&&(b=a.clientX+document.body.scrollLeft+document.documentElement.scrollLeft,c=a.clientY+document.body.scrollTop+document.documentElement.scrollTop),self.targetElement&&(b=a.screenX,c=a.screenY),[b,c]},d=function(a,b){var d=c(a.changedTouches?a.changedTouches[0]:a),e={};if("svg"==b.nodeName){e=b.createSVGPoint();var f=b.getScreenCTM();e.x=d[0],e.y=d[1],self.matrix=f.inverse(),e=e.matrixTransform(self.matrix)}else e.x=d[0],e.y=d[1];return e},e=function(a){var b=this;if(a.event_data&&a.event_data.annotationid){var c=b.getAnnotation(a.event_data.annotationid);c&&(b.pieMaker(b.getAnnotation(a.event_data.annotationid)).call(a.target,"symbol"!==c.type,a),this.renderer._canvas.addEventListener("mousemove",f,!0))}},f=function(a){a.preventDefault(),a.stopPropagation()},g=function(a){var b=this;if(a.event_data&&a.event_data.annotationid&&"potential"===a.event_data.annotationid){var c=b.potential_annos[0];b.potential_annos=[],c.id=(new Date).getTime(),delete c["class"],b.annotations.push(c),b.renderer.select()}a.preventDefault(),a.stopPropagation()},h=function(a){var b=this;if(a.event_data&&a.event_data.annotationid){var c=b.getAnnotation(a.event_data.annotationid);c&&b.pie_map[c.id]&&(b.pie_map[c.id].end(),delete b.pie_map[c.id]),a.preventDefault()}},i=function(a){var b=this;this.pie_map={},a.addEventListener("mousedown",e.bind(b),!1),a.addEventListener("touchstart",e.bind(b),!1),a.addEventListener("click",g.bind(b),!1),a.addEventListener("touchend",h.bind(b),!1)},j=function(a,b,c){return{symbol:a.symbolTags[c],hover_function:function(){console.log("Set symbol to "+c),b.tag=c}}},k=function(a,b,c){return{text:c,hover_function:function(){b.tag=c}}},l=function(a,b){return{symbol:"#icon_trash",text_alt:"Delete",select_function:function(){a.demoteAnnotation("self",b)}}};MASCP.EditableReader.prototype.generatePieContent=function(a,b,c){var d=this,e=[];return c.forEach(function(c){e.push(a.call(null,d,b,c))}),e.push(l(d,b)),e},MASCP.EditableReader.prototype.pieMaker=function(a){var b=this;return function(c,e){if(e||(e=c,c=null),e.preventDefault(),e.stopPropagation(),!b.pie_map[a.id]){var g,h=b.renderer._canvas;c?g=b.generatePieContent(k,a,Object.keys(b.boxTags)):"symbol"==a.type&&(g=b.generatePieContent(j,a,Object.keys(b.symbolTags)));var i=d(e,h),l=PieMenu.create(h,i.x/h.RS,i.y/h.RS,g,{size:7,ellipse:!0});b.pie_map[a.id]=l;var m=function(c){h.removeEventListener("mouseout",m),h.removeEventListener("mouseup",m),h.removeEventListener("mousemove",f,!0),b.pie_map[a.id]&&(b.pie_map[a.id].destroy(),delete b.pie_map[a.id])};b.pie_map[a.id].end=m,h.addEventListener("mouseup",m,!1)}}},MASCP.EditableReader.prototype.setupSequenceRenderer=function(a,b){var c=this;bean.add(MASCP.getLayer(b.track),"selection",function(a,b){a&&b&&(b+=1,c.potential_annos=[{id:"potential",type:Math.abs(a-b)<=1?"symbol":"box",acc:c.acc,length:Math.abs(a-b),index:Math.min(a,b),"class":"potential"}],bean.fire(c,"resultReceived"))}),a._canvas&&i.call(c,a._canvas),a.bind("sequenceChange",function(){i.call(c,this._canvas)}),c.renderer=a,b.renderer||(b.renderer="var renderData = "+MASCP.EditableReader.renderer.toString())},Object.defineProperty&&(Object.defineProperty(MASCP.EditableReader.prototype,"result",{get:function(){var a=this.data;return this.potential_annos&&this.potential_annos[0]&&(a[this.potential_annos[0].acc]||(a[this.potential_annos[0].acc]=[]),a[this.potential_annos[0].acc].push(this.potential_annos[0])),{_raw_data:{data:a}}}}),Object.defineProperty(MASCP.EditableReader.prototype,"annotations",{get:function(){return this._annotations||(this._annotations=m(this)),this._annotations},set:function(a){this._annotations||(this._annotations=m(this)),a&&Array.prototype.splice.apply(this._annotations,[0,this._annotations.length].concat(a))}}),Object.defineProperty(MASCP.EditableReader.prototype,"data",{get:function(){var a=b(this.annotations);return a.symbol_map=this.symbolTags,a.tag_map=this.boxTags,a},set:function(b){this.annotations=a(b)}}),Object.defineProperty(MASCP.EditableReader.prototype,"symbolTags",{get:function(){return{GalNAc:"#sugar_galnac",Man:"#sugar_man",Xyl:"#sugar_xyl",Fuc:"#sugar_fuc",GlcNAc:"#sugar_glcnac","N-linked":"#sugar_glcnac(b1-4)glcnac"}}}),Object.defineProperty(MASCP.EditableReader.prototype,"boxTags",{get:function(){return this._box_tags||(this._box_tags={Red:"#f00",Green:"#0f0",Blue:"#00f"}),this._box_tags},set:function(a){Object.keys(a).forEach(function(b){this._box_tags[b]=a[b]})}}));var m=function(a){a._annotations||(a._annotations=[]),a.potential_annos||(a.potential_annos=[]);var b=function(b,c){b&&b.pie||c&&"pie"in c||bean.fire(a,"resultReceived")},c=new ArrayObserver(a._annotations);return a._annotations.forEach(function(a){new ObjectObserver(a).open(b)}),c.open(function(c){var d=!1;c.forEach(function(c){for(;c.addedCount>0;){var e=a._annotations[c.index+c.addedCount-1];new ObjectObserver(e).open(b),e.acc==a.acc&&(d=!0),c.addedCount-=1}}),d&&b()}),a._annotations};MASCP.EditableReader.prototype.getAnnotation=function(a){for(var b in this.annotations){var c=this.annotations.filter(function(b){return b.id===a});if(1==c.length)return c[0]}return null},MASCP.EditableReader.renderer=function(a,b,c){var d=function(a,b,c,d){var e,f=[];if("symbol"==a.type||1==a.length)e={aa:a.index,type:"marker",options:{content:b[a.tag]?b[a.tag]:"X",bare_element:!0,border:"#f00",offset:6+d,height:12}},f.push(e);else{e={aa:a.index,type:"shape",width:a.length,options:{shape:"rectangle",height:4,offset:0+d}},c[a.tag]&&(e.options.fill=c[a.tag]),f.push(e),a.tag&&(e={aa:a.index+Math.floor(.5*a.length),type:"marker",options:{content:{type:"text_circle",text:a.tag,options:{stretch:"right",weight:"normal",fill:"#000"},opacity:.8},offset:7.5+d,height:15,no_tracer:!0,bare_element:!0,tag_marker:!0,zoom_level:"text"}},f.push(e))}return f.forEach(function(b){b.options.events=[{type:"click",data:{annotationid:a.id,is_annotation:!b.tag_marker}},{type:"mousedown",data:{annotationid:a.id,is_annotation:!b.tag_marker}},{type:"touchstart",data:{annotationid:a.id,is_annotation:!b.tag_marker}},{type:"touchend",data:{annotationid:a.id,is_annotation:!b.tag_marker}}]}),f},e=function(a){var b=[];return Object.keys(a).forEach(function(c){if("symbol_map"!==c&&"tag_map"!==c&&a[c]&&Array.isArray(a[c])){a[c];a[c].forEach(function(a){a.acc=c}),b=b.concat(a[c])}}),b},f=function(a){var b=a,c=[];return b.forEach(function(a){if("potential"!==a["class"]){var b,d;b=a.index,d=a.index+(a.length||1),c.push({index:b,start:!0,annotation:a}),c.push({index:d,start:!1,annotation:a})}}),c.sort(function(a,b){var c=(a.annotation.acc||"").localeCompare(b.annotation.acc);return 0!==c&&a.annotation.acc&&b.annotation.acc?c:a.index<b.index?-1:a.index>b.index?1:a.index==b.index?a.start?-1:1:void 0}),b.forEach(function(a){if("potential"===a["class"]){var b,d;b=a.index,d=a.index+(a.length||1),c.unshift({index:d,start:!1,annotation:a}),c.unshift({index:b,start:!0,annotation:a})}}),c},g=function(a,b,c,e){for(var g=[e],h=[],i=f(a),j=-1,k=!0,l=0;k;){k=!1;for(var m=0;m<i.length;m++)if(i[m]){var n=i[m].annotation;g.indexOf(n.acc)<0||n.deleted||i[m].start&&(i[m].index>j?(j=n.index+(n.length||1),h=h.concat(d(n,b,c,"potential"==n["class"]?-1:l)),i[m]=null):k=!0)}j=0,l+=10}return h};return g(e(b),b.symbol_map,b.tag_map,c)}}(),"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.ExomeReader=MASCP.buildService(function(a){return this._raw_data=a||{},this}),MASCP.ExomeReader.SERVICE_URL="http://localhost:3000/data/latest/gator",function(a){var b=a.prototype._dataReceived;a.prototype._dataReceived=function(a,c){return null===a?b.call(this,null,c):"object"==typeof a?b.call(this,a,c):"string"==typeof a&&a.match(/^NM/)?(this.agi=a.replace(/(\n|\r)+$/,""),void this.retrieve(this.agi)):void 0}}(MASCP.ExomeReader),MASCP.ExomeReader.prototype.requestData=function(){var a=this.agi||"";return a.match(/NM/)?{type:"GET",dataType:"json",data:{agi:a,service:"exome"}}:{type:"GET",dataType:"txt",url:"http://uniprot.org/mapping/",data:{from:"ACC+ID",to:"REFSEQ_NT_ID",format:"list",query:a}}},MASCP.ExomeReader.prototype.setupSequenceRenderer=function(a){var b=this;b.bind("resultReceived",function(){var c=b.result;a.withoutRefresh(function(){for(var b=c.getAccessions();b.length>0;){var d=b.shift(),e=c.getSnp(d);if(!(e.length<1)){var f="rnaedit",g=[],h=[];a.registerLayer(f,{fullname:"RNA Edit (mod)"});MASCP.getLayer(f).icon=null;var i;for(i=e.length-1;i>=0;i--)h.push({index:e[i][0]+1,delta:e[i][1]}),g.push({insertBefore:e[i][0]+1,delta:e[i][2]});for(i=g.length-1;i>=0;i--){var j=g[i].insertBefore-1;j>a.sequence.length&&(j=a.sequence.length),a.getAA(j).addAnnotation("rnaedit",1,{border:"rgb(150,0,0)",content:g[i].delta,angle:"auto"})}}}}),a.trigger("resultsRendered",[b])})},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(function(){var a="",b=function(a){var b=this.datasetname||"combined";if(!a||!a.data)return this;var c=a.data.filter(function(a){return a.dataset.indexOf(b)>=0})[0]||{data:[]};if("glycodomain"==b&&(c=a.data.filter(function(a){return"application/json+glycodomain"==a.metadata.mimetype})[0]||{data:[]},console.log(c)),"combined"==b){var d={};a.data.forEach(function(a){var b=a.metadata.mimetype;a.data.forEach(function(b){b.dataset=a.dataset}),d[b]=(d[b]||[]).concat(a.data)}),c={data:d}}return this._raw_data=c,this};MASCP.GatorDataReader=MASCP.buildService(b),MASCP.GatorDataReader.prototype.requestData=function(){var a={type:"GET",dataType:"json",data:{}},b=(this._requestset||"combined")+"/"+(this.agi||this.acc).toLowerCase(),c="/"==this._endpointURL.slice(-1)?this._endpointURL+b:this._endpointURL+"/"+b;return a.auth=MASCP.GATOR_AUTH_TOKEN,a.url=c,a};var c;Object.defineProperty(MASCP.GatorDataReader,"ID_TOKEN",{get:function(){return c},set:function(a){c=a,d=null}});var d,e=function(){return new Promise(function(b,c){MASCP.Service.request({url:a+"/login?cachebuster="+(new Date).getTime(),type:"GET"},function(a,d){a?c(a):(MASCP.GatorDataReader.ID_TOKEN=JSON.parse(d),b())},!0)})},f=function(){return d?d:(MASCP.ClustalRunner.SERVICE_URL=a+"/tools/clustal",d=MASCP.GatorDataReader.ID_TOKEN?MASCP.GATOR_AUTH_TOKEN&&MASCP.LOGGEDIN?Promise.resolve():new Promise(function(b,c){MASCP.Service.request({auth:MASCP.GatorDataReader.ID_TOKEN,url:a+"/exchangetoken",type:"POST",content:"application/json"},function(d,e){d?c(d):(MASCP.GATOR_AUTH_TOKEN=JSON.parse(e),MASCP.LOGGEDIN=!0,bean.fire(MASCP.GatorDataReader,"auth",[a]),b())},!0)}):e().then(function(){d=null}).then(f))},g=MASCP.GatorDataReader.Result.prototype;Object.defineProperty(MASCP.GatorDataReader.prototype,"datasetname",{get:function(){return this._datasetname},set:function(a){this._datasetname=a,this._requestset="combined";var b=function(b){return this.datasetname=a,MASCP.GatorDataReader.Result.apply(this,[b]),this};b.prototype=g,this.__result_class=b}}),MASCP.GatorDataReader.authenticate=function(){f()},MASCP.GatorDataReader.createReader=function(b){var c=new MASCP.GatorDataReader(null,a+"/data/latest/");return console.log(b),c.datasetname=b,f().then(function(){bean.fire(c,"ready")}),c}}(),"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.GelMapReader=MASCP.buildService(function(a){if(this._raw_data=a,!a)return this;if(!a.Maps)return this;for(var b=[],c=a.Maps.length-1;c>=0;c--){var d=a.Maps[c];d.sequence="",b.push(d)}return this.maps=b,this}),MASCP.GelMapReader.SERVICE_URL="http://gelmap.de/gator2.php?",MASCP.GelMapReader.prototype.requestData=function(){var a=this.agi.toUpperCase();return{type:"GET",dataType:"json",data:{agi:a,service:"gelmap"}}},MASCP.GelMapReader.Result=MASCP.GelMapReader.Result,MASCP.GelMapReader.Result.prototype.getPeptides=function(){return this._peptides?this._peptides:(this._peptides=peptides,peptides)},MASCP.GelMapReader.Result.prototype._cleanSequence=function(a){return a.replace(/[^A-Z]/g,"")},MASCP.GelMapReader.prototype.setupSequenceRenderer=function(a){var b=this;MASCP.registerGroup("gelmap_experimental",{fullname:"GelMap",hide_member_controllers:!0,hide_group_controller:!0,color:"#aaaaff"});var c="gelmap_controller",d=".active .overlay { background: #ff5533; } .active a { color: #000000; text-decoration: none !important; }  :indeterminate { background: #ff0000; } .tracks .active { background: #0000ff; } .inactive a { text-decoration: none; } .inactive { display: none; }";MASCP.registerLayer(c,{fullname:"GelMap",color:"#aaaaff",css:d}),a.createGroupController&&a.createGroupController("gelmap_controller","gelmap_experimental");var e=function(a){a=a.sort(function(a,b){return 1*a-1*b});for(var b=[a[0]],c=1;c<a.length;c++)a[c-1]!==a[c]&&b.push(a[c]);return b};return this.bind("resultReceived",function(){for(var f=this.result.maps,g=f.length-1;g>=0;g--){var h=f[g];MASCP.registerLayer("gelmap_map_"+h.id,{fullname:h.title,group:"gelmap_experimental",color:"#aaaaff",css:d}),MASCP.getLayer("gelmap_map_"+h.id).href=h.url;for(var i=e(f[g].peptides),j=i.length-1;j>=0;j--){var k=i[j],l=a.getAminoAcidsByPeptide(k),m="gelmap_map_"+h.id;l.addToLayer(m),l.addToLayer(c)}}a.trigger("resultsRendered",[b])}),this},MASCP.GelMapReader.Result.prototype.render=function(){},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.GenomeReader=MASCP.buildService(function(a){return this._raw_data=a,this}),MASCP.GenomeReader.SERVICE_URL="http://mygene.info/v2/query",MASCP.GenomeReader.prototype.requestData=function(){return this.acc=this.agi,this.geneid?(this.acc||(this.acc=this.agi=""+this.geneid),
this.exons?{type:"GET",dataType:"txt",url:"http://www.uniprot.org/mapping/",data:{from:"REFSEQ_NT_ID",to:"ACC",format:"tab",query:Object.keys(this.exons).join(" ")}}:{type:"GET",url:"http://mygene.info/v2/gene/"+this.geneid,dataType:"json",data:{fields:"exons_hg19"}}):{type:"GET",dataType:"json",url:"http://mygene.info/v2/query",data:{q:"uniprot:"+this.acc.toUpperCase(),fields:"entrezgene",email:"joshi%40sund.ku.dk"}}},function(a){var b=a.prototype._dataReceived;a.prototype._dataReceived=function(a,c){var d=this;if(a.data&&"db"===c)return d.sequences=[{agi:"genome"}],Object.keys(a.data).forEach(function(a){d.sequences.push({agi:a.toLowerCase()})}),b.call(this,a,c);if(200>c||c>=400)return b.call(this,null,c);if(!this.geneid)return this.geneid=a.hits[0].entrezgene,void this.retrieve(this.acc||this.agi);if(!this.exons){if(this.exons=a.exons_hg19||a.exons,!this.nt_mapping)return void this.retrieve(this.acc||this.agi);a=this.nt_mapping.map(function(a){return a.join("	")}).join("\n")}var e={};return d.sequences=[{agi:"genome"}],(a||"").split("\n").forEach(function(a){var b=a.split("	");if(b[1]){var c=b[1].toLowerCase(),f=b[0];f=f.replace(/\..*$/,""),d.exons[f]&&(d.agi&&d.acc||(d.acc=c,d.agi=c),e[c]||(e[c]=[]),d.exons[f]._id=f,e[c].push(d.exons[f]),d.sequences.push({agi:c.toLowerCase()}))}}),b.call(this,{data:e},c)}}(MASCP.GenomeReader),MASCP.GenomeReader.Result.prototype.getSequences=function(){var a=[],b=this._raw_data.data,c=Object.keys(b),d=max=null;return c.forEach(function(a){var c=b[a].map(function(a){return Array.isArray(a)&&(a=a.filter(function(a){return a.chr.match(/^[\dXx]+$/)})[0]),[a.txstart,a.txend]});c.forEach(function(a){(!d||a[0]<d)&&(d=a[0]),(!max||a[1]>max)&&(max=a[1])})}),a=[Array(Math.floor((max-d)/3)).join(".")],this.min=d,this.max=max,a},MASCP.GenomeReader.Result.prototype.getIntrons=function(a){var b=this,c=[],d=Object.keys(b._raw_data.data);return d.forEach(function(d){var e=b._raw_data.data[d];e.forEach(function(d){if(Array.isArray(d)&&(d=d.filter(function(a){return a.chr.match(/^[\dXx]+$/)})[0],!d))return null;for(var e=d.exons,f=0;f<e.length;f++)0==f?c.push([b.min,e[f][0]-a]):c.push([e[f-1][1]+a,e[f][0]-a]),f==e.length-1&&c.push([e[f][1]+a,b.max]),c.slice(-1)[0][0]>c.slice(-1)[0][1]&&c.splice(c.length-1,1)})}),c},MASCP.GenomeReader.prototype.proteinLength=function(a){for(var b=a.exons,c=0,d=0;d<b.length;d++)if(!(a.cdsstart>b[d][1]&a.cdsstart>b[d][0]||a.cdsend<b[d][0])){var e=a.cdsstart>b[d][0]?a.cdsstart:b[d][0],f=a.cdsend<b[d][1]?a.cdsend:b[d][1];c+=f-e}return Math.floor(c/3)-1},MASCP.GenomeReader.prototype.calculateSequencePositionFromProteinPosition=function(a,b){var c=this,d=a,e=c.result._raw_data.data[d.toLowerCase()];if(!e)return-1;e.txstart||(e=e.map(function(a){return Array.isArray(a)&&(a=a.filter(function(a){return a.chr.match(/^[\dXx]+$/)})[0],!a)?null:a}));var f=e[0]||{},g=f.exons||[],h=(Math.floor(b/3),0);if(b<f.cdsstart&&(h=6,-1==f.strand&&(h=3)),b>f.cdsend&&(h=3*c.proteinLength(f),1==f.strand&&(h+=3)),0==h)for(var i=0;i<g.length;i++)if(!(f.cdsstart>g[i][1]&f.cdsstart>g[i][0])){var j=f.cdsstart>g[i][0]?f.cdsstart:g[i][0],k=f.cdsend<g[i][1]?f.cdsend:g[i][1];if(j>b)break;if(k>=b&&b>=j){h+=b-j;break}h+=k-j}return h=Math.floor(h/3)-1,-1==f.strand&&(h=c.proteinLength(f)-h),h},MASCP.GenomeReader.prototype.calculateProteinPositionForSequence=function(a,b){var c=this,d=a,e=c.result._raw_data.data[d.toLowerCase()];if(!e)return-1;e.txstart||(e=e.map(function(a){return Array.isArray(a)&&(a=a.filter(function(a){return a.chr.match(/^[\dXx]+$/)})[0],!a)?null:a}));var f=e[0]||{},g=f.exons||[];-1==f.strand&&(b=c.proteinLength(f)-b);for(var h,i=3*b,j=0;j<g.length;j++)if(!(f.cdsstart>g[j][1]&f.cdsstart>g[j][0])){var k=f.cdsstart>g[j][0]?f.cdsstart:g[j][0],l=g[j][1]-k;if(l>=i){h=k+i;break}i-=l}return h},MASCP.GenomeReader.prototype.calculatePositionForSequence=function(a,b){var c=this,d=c.sequences[a].agi,e=[],f=b;"genome"==d||(f=c.calculateProteinPositionForSequence(a,b));for(var g=0;g<e.length;g++)b>e[g][1]&&(f-=e[g][1]-e[g][0]),b<e[g][1]&&b>e[g][0]&&(f=-1);return f},function(a){var b=function(a){var b=a._raw_data.data,c=Object.keys(b),d=(a.max,a.min,[]),e=0;return c.forEach(function(a){b[a].map(function(a,b){if(!Array.isArray(a)||(a=a.filter(function(a){return a.chr.match(/^[\dXx]+$/)})[0])){var c=a.exons,f=0==b?"#999":"#f99";c.forEach(function(b){d.push({aa:1+b[0],type:"box",width:b[1]-b[0],options:{offset:e,height_scale:1,fill:f,merge:!1}}),a.strand>0?d.push({aa:b[1]-1,type:"marker",options:{height:4,content:{type:"right_triangle",fill:"#aaa"},offset:e+2,bare_element:!0}}):d.push({aa:b[0]+1,type:"marker",options:{height:4,content:{type:"left_triangle",fill:"#aaa"},offset:e+2,bare_element:!0}})}),d.push({aa:a.cdsstart,type:"box",width:1,options:{fill:"#0000ff",height_scale:2,offset:e-2,merge:!1}}),d.push({aa:a.cdsend,type:"box",width:1,options:{fill:"#0000ff",height_scale:2,offset:e-2,merge:!1}}),e+=1}});e+=2}),d},c=function(a){var b=a.removed_regions||[],c=[],d=(a.max,a.min,a._raw_data.data),e=Object.keys(d),f=e.reduce(function(a,b){return a+d[b].length},0);return b.forEach(function(a){var b=a[0],d=a[1],e=Math.floor(b%1e6/1e3)+"kb",g=Math.floor(d%1e6/1e3)+"kb";c.push({aa:b-3,type:"text",options:{txt:e,fill:"#000",height:4,offset:-5*f,align:"right"}}),c.push({aa:d+3,type:"text",options:{txt:g,fill:"#000",height:4,offset:5*f,align:"left"}}),c.push({aa:b-1,type:"box",width:d-b+3,options:{fill:"#999",height_scale:3*f,offset:-1*f}})}),c},d=function(a,b){var c=a.getIntrons(b),d=[{index:a.min-2,start:!0,idx:-1},{index:a.min,start:!1,idx:-1}];c.forEach(function(a,b){d.push({index:a[0],start:!0,idx:b}),d.push({index:a[1],start:!1,idx:b})}),d.sort(function(a,b){return a.index<b.index?-1:a.index>b.index?1:a.index==b.index?a.start?-1:1:void 0});var e=[];d.forEach(function(b,c){b.start&&d[c+1]&&0==d[c+1].start&&b.index!=d[c+1].index&&d[c+1].index!=a.min&&e.push([b.index,d[c+1].index])}),a.removed_regions=e},e=function(a){return function(b,c,d){var e=b;if(!a.result)return d?3*e:Math.floor(e/3);var f=a.result.removed_regions||[];if(d){e=3*b,j=e;for(var g=0;g<f.length&&e>0;g++){var h=g>0?f[g-1]:[null,a.result.min],i=f[g]||[a.result.max,null];e-=i[0]-h[1],e>0&&(j+=f[g][1]-f[g][0])}return j+a.result.min}for(var j=e-a.result.min,g=0;g<f.length;g++)e>f[g][1]&&(j-=f[g][1]-f[g][0]),e<f[g][1]&&e>f[g][0]&&(j=f[g][1]-a.result.min);return 3>j&&(j=3),Math.floor(j/3)}};Object.defineProperty(a.prototype,"exon_margin",{set:function(a){this._exon_margin=a,this.result&&(d(this.result,a),this.redrawIntrons())},get:function(){return this._exon_margin}});var f=function(a,b,d){var e=[],f=function(){if(!(e.length<1)&&e[0].parentNode){for(var a=!1,b=0;!a&&b<e.length-3;b+=3)e[b].hasAttribute("display")?a=!0:e[b].getBoundingClientRect().right>e[b+3].getBoundingClientRect().left&&(a=!0);e.forEach(function(b){"rect"!=b.nodeName&&(a?b.setAttribute("display","none"):b.removeAttribute("display"))})}};return a.bind("zoomChange",f),function(){var g=this.result;a.sequence=Array(d(g.max)).join("."),e.length>0&&(e.forEach(function(c){a.remove(b,c)}),e=[]);var h={agi:b,gotResult:function(){e=a.renderObjects(b,c(g)),a.refresh(),f()}};MASCP.Service.prototype.registerSequenceRenderer.call(h,a),h.gotResult()}};a.prototype.setupSequenceRenderer=function(a){var c=this;a.addAxisScale("genome",function(a,b,d){return b&&b.genomic?a:d?c.calculateSequencePositionFromProteinPosition(b.name,a):c.calculateProteinPositionForSequence(b.name,a)});var g="cds",h=function(i){i||(i=0),MASCP.registerLayer(g,{fullname:"Exons",color:"#000000"}),MASCP.getLayer(g).genomic=!0,a.trackOrder.indexOf(g)<0&&a.trackOrder.push(g),a.showLayer(g);var j=this.result,k=(j.getSequences(),e(c));if(a.addAxisScale("removeIntrons",k),d(c.result,c.exon_margin||300),!a.sequence)return void a.setSequence(Array(k(j.max)).join("."))(function(){h(i)});a.sequence=Array(k(j.max)).join("."),a.redrawAxis();var l={agi:g,gotResult:function(){a.renderObjects(g,b(j))}};MASCP.Service.prototype.registerSequenceRenderer.call(l,a),l.gotResult(),c.redrawIntrons=f(a,g,k),c.redrawIntrons()};this.bind("resultReceived",h)}}(MASCP.GenomeReader),"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.GoogledataReader=MASCP.buildService(function(a){return this}),function(){function a(b){for(var c=a.options,d=c.parser[c.strictMode?"strict":"loose"].exec(b),e={},f=14;f--;)e[c.key[f]]=d[f]||"";return e[c.q.name]={},e[c.key[12]].replace(c.q.parser,function(a,b,d){b&&(e[c.q.name][b]=d)}),e}var b,c,d,e,f,g,h,i,j,k="",l="",m="https://docs.google.com/feeds/ https://spreadsheets.google.com/feeds/",n=function(a){var b=/.*\/R(\d*)C(\d*)/,c={};c.data=[];for(var d in a.feed.entry){var e,f,g=a.feed.entry[d],h=g.id.$t,i=b.exec(h);null!=i&&(e=i[1]-1,f=i[2]-1);var j=c.data[e];"undefined"==typeof j&&(c.data[e]=[]),c.data[e][f]=g.content.$t}return c.retrieved=new Date(new Date(a.feed.updated.$t).getTime()),c.retrieved.setUTCHours=function(){},c.retrieved.setUTCMinutes=function(){},c.retrieved.setUTCSeconds=function(){},c.retrieved.setUTCMilliseconds=function(){},c.etag=a.feed.gd$etag,c.title=a.feed.title.$t,c};i=function(a,b,c,d){if(!a.match(/^spreadsheet/))return void console.log("No support for retrieving things that aren't spreadsheets yet");var e=a.replace(/^spreadsheet:/,"");h("spreadsheets.google.com","/feeds/list/"+e+"/1/private/full?sq="+encodeURIComponent(b)+"&alt=json",null,function(b,e){if(e.feed.entry){var f,g=e.feed.entry.reverse().shift();g.link.forEach(function(a){"edit"==a.rel&&(f=a.href)});var i=/.+?\:\/\/.+?(\/.+?)(?:#|\?|$)/,k=i.exec(f)[1];h("spreadsheets.google.com",k+"?alt=json",g.gd$etag,function(b,e){b||j(a,c,d)},"DELETE")}else j(a,c,d)})},j=function(a,b,c){if(!a.match(/^spreadsheet/))return void console.log("No support for retrieving things that aren't spreadsheets yet");var d=a.replace(/^spreadsheet:/,""),e=['<entry xmlns="http://www.w3.org/2005/Atom" xmlns:gsx="http://schemas.google.com/spreadsheets/2006/extended">'];for(var f in b)e.push("<gsx:"+f+">"),null===b[f]?e.push(""):e.push(b[f]),e.push("</gsx:"+f+">");e.push("</entry>"),h("spreadsheets.google.com","/feeds/list/"+d+"/1/private/full",null,function(a,b){a?c.call(null,a):c.call(null)},"POST",e.join(""))},c=function(a){h("docs.google.com","/feeds/default/private/full/-/spreadsheet?alt=json",null,function(b,c){var d=[];if(c){var e,f=c.feed.entry;for(e=f.length-1;e>=0;e--)d.push([f[e].title.$t,f[e].gd$resourceId.$t,new Date(f[e].updated.$t)])}a.call(null,null,d)})},e=function(a){h("www.googleapis.com","/drive/v2/about",null,function(b,c){return b?void a.call(null,b):void a.call(null,null,c.permissionId)})},a.options={strictMode:!1,key:["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"],q:{name:"queryKey",parser:/(?:^|&)([^&=]*)=?([^&]*)/g},parser:{strict:/^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,loose:/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/}};var o={},p={},q=function(a,b,c){if(o[a]&&c&&MASCP.GOOGLE_AUTH_TOKEN)return void c.call(null,null,o[a]);var d=encodeURIComponent("title='"+a+"' and 'appfolder' in parents");h("www.googleapis.com","/drive/v2/files?q="+d,null,function(b,d){if(o[a]&&c)return void c.call(null,null,o[a]);if(b&&401==b.status&&delete MASCP.GOOGLE_AUTH_TOKEN,b)return void(c&&c.call(null,b));if(0==d.items.length)return o[a]={},void(c&&c.call(null,null,o[a]));var e=d.items[0].id;p[a]=d.items[0].etag,c&&s({id:e},null,function(b,d){return o[a]?void c.call(null,null,o[a]):(b&&c.call(null,b),o[a]=d,void c.call(null,null,o[a],e))})})},r=function(a){return gapi&&gapi.auth&&gapi.auth.authorize?(MASCP.GOOGLE_CLIENT_ID||a.call(null,null,!1),void gapi.auth.checkSessionState({client_id:MASCP.GOOGLE_CLIENT_ID,session_state:null},function(b){a.call(null,null,b)})):void a.call(null,{cause:"No google auth library"})},s=function(b,c,d){return gapi&&gapi.auth&&gapi.auth.authorize?void r(function(e,f){if(e)return void d.call(null,e);if(f)return void d.call(null,{cause:"No user event"});if("string"==typeof b)return void q(b,c,d);if(!b.id)return void d.call(null,{error:"No file id"});var g=b.id;h("www.googleapis.com","/drive/v2/files/"+g,b.etag,function(c,e){if(c)return void d.call(null,c);var f=a(e.downloadUrl);b.etag=e.etag,b.modified=new Date(e.modifiedDate),b.owner=(e.ownerNames||[])[0],h(f.host,f.relative,null,function(a,b){if(a)return void d.call(null,a);b||(b={});var c;c="string"!=typeof b?b:JSON.parse(b),d.call(null,null,c,g)})})}):void d.call(null,{cause:"No google auth library"})},t=function(a,b,c){if(!o[a])return void c.call(null,{error:"No file to save"});var d=encodeURIComponent("title='"+a+"' and 'appdata' in parents and mimeType = '"+b+"' and trashed = false");h("www.googleapis.com","/drive/v2/files?q="+d,null,function(d,e){if(o[a]){if(d)return void c.call(null,d);var f=null;return e.items&&0==e.items.length?void h("www.googleapis.com","/drive/v2/files/",null,arguments.callee,"POST:application/json",JSON.stringify({parents:[{id:"appdata"}],title:a,mimeType:b,description:a})):(f=e.items?e.items[0].id:e.id,p[a]&&e.items&&p[a]!==e.items[0].etag?(o[a]=null,p[a]=null,s(a,b,function(){}),void c.call(null,{cause:"File too old"})):void(o[a]&&v({id:f,content:o[a]},b,function(d,e){return d?(d.status&&412==d.status&&(o[a]=null,p[a]=null,s(a,b,c)),void c.call(null,d)):(p[a]=null,s(a,b,null),void c.call(null,null,o[a]))})))}})},u=function(a,b,c){if("string"==typeof a)return void t(a,b,c);if(a.id)return void v(a,b,c);var d=JSON.stringify({parents:[{id:a.parent}],title:a.name,mimeType:b,description:a.name});h("www.googleapis.com","/drive/v2/files/",null,function(d,e){return d?void c.call(null,d):(a.id=e.id,void v(a,b,c))},"POST:application/json",d)},v=function(a,b,c){const d="-------314159265358979323846",e="\r\n--"+d+"\r\n",f="\r\n--"+d+"--";if("string"==typeof a)return void t(a,b,c);if(!a.id)return void c.call(null,{error:"No file id"});var g,h=a.id;if(!a.content)return void c.call();try{g=JSON.stringify(a.content)}catch(i){return void c.call(null,{status:"JSON error",error:i})}h=a.id;a.etag;var j=e+"Content-Type: application/json\r\n\r\n"+JSON.stringify({mimeType:b})+e+"Content-Type: "+b+"\r\n\r\n"+g+"\r\n"+f,k=gapi.client.request({path:"/upload/drive/v2/files/"+h,method:"PUT",params:{uploadType:"multipart"},headers:{"Content-Type":'multipart/mixed; boundary="'+d+'"'},body:j});k.execute(function(b,d){return b&&b.error&&412==b.error.code?void c.call(null,{status:412,message:"E-tag mismatch"}):b?void c.call(null,null,a.content,a.id):void c.call(null,{status:"Google error",response:response})})};if(d=function(a,b){var c=a.replace(/^file:/,"");e(function(a,d){return a?void b.call(null,a):void h("www.googleapis.com","/drive/v2/files/"+c+"/permissions",null,function(a,c){if(a)return a.cause&&"400"==a.cause.status?void b.call(null,null,{write:!1,read:!1}):void b.call(null,a);var e=!1;return c?(c.items.forEach(function(a){a.id!=d||"owner"!=a.role&&"writer"!=a.role||(e=!0)}),void b.call(null,null,{write:e,read:!0})):void b.call(null,null,{write:!1,read:!1})})})},f=function(a,b){h("www.googleapis.com","/drive/v2/files/"+a+"?fields=mimeType,title,fileExtension",null,function(a,c){var d=(c||{}).mimeType;d&&(d=d.replace(/\s+charset=[^\s]+/i,"")),b.call(null,a,a?null:d,a?null:(c||{}).title,a?null:(c||{}).fileExtension)})},b=function(b,c,d){var e=!0;b.match(/^spreadsheet/)||(e=!1);var f=b.replace(/^spreadsheet:/,""),g="private";e?h("spreadsheets.google.com","/feeds/cells/"+f+"/1/"+g+"/basic?alt=json",c,function(a,b){a?d.call(null,a):b?d.call(null,null,n(b)):d.call(null,{cause:"No data"})}):h("www.googleapis.com","/drive/v2/files/"+f,c,function(b,c){if(b)b.cause&&401==b.cause.status&&delete MASCP.GOOGLE_AUTH_TOKEN,d.call(null,b);else{var e=a(c.downloadUrl),g=c.title,i=c.etag;h(e.host,e.relative,null,function(a,b){a?d.call(null,a):(b.etag=i,b.title=g||f,d.call(null,null,b))})}})},"undefined"!=typeof module&&module.exports){var w=require("nconf");w.env("__").argv(),w.file("config.json");var x=w.get("google:client_id"),y=w.get("google:client_secret"),z=null,A=w.get("google:refresh_token"),B=function(a){return z&&z.expiration<new Date&&(z=null),z?void a(z):A?void D(A,function(b){if(!b)return console.log("Problems with auth details"),void a(null);if(b.error&&"invalid_grant"==b.error)return w.clear("google:refresh_token"),w.save(function(a){a&&console.log("Could not write config")}),A=null,void B(a);var c=new Date;c.setSeconds(c.getSeconds()+b.expires_in),z={token:b.access_token,expiration:c},a(z)}):void C(function(b){if(!b)return console.log("We didn't get back auth details"),void a(null);var c=new Date;c.setSeconds(c.getSeconds()+b.expires_in),z={token:b.access_token,expiration:c},A=b.refresh_token,w.set("google:refresh_token",A),w.save(function(a){a?console.log("Could not write config"):console.log("Successful retrieval of auth details")}),a(z)})},C=function(a){var b,c="https://accounts.google.com/o/oauth2/auth?",d=encodeURIComponent(m),e=encodeURIComponent("urn:ietf:wg:oauth:2.0:oob"),f=encodeURIComponent(x);return x&&y?repl&&repl.repl?repl.repl.running?(console.log("Already asking for auth info"),void a(null)):(console.log("Go to this URL:"),console.log(c+"scope="+d+"&redirect_uri="+e+"&response_type=code&client_id="+f),console.log("Authentication code : "),repl.repl.running=!0,b=repl.repl.eval,void(repl.repl.eval=function(c,d,e,f){repl.repl.eval=b;var g=/\n.*/m;c=c.replace(/\(/,""),c=c.replace(g,"");var h=require("querystring"),i=h.stringify({code:c,client_id:x,client_secret:y,redirect_uri:"urn:ietf:wg:oauth:2.0:oob",grant_type:"authorization_code"}),j=require("https").request({host:"accounts.google.com",path:"/o/oauth2/token",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded","Content-Length":i.length}},function(b){b.setEncoding("utf8");var c="";b.on("data",function(a){c+=a}),b.on("end",function(){var b=JSON.parse(c);b.error?(console.log("Error validating authentication code"),delete repl.repl.running,a(null)):(f(null,"Authentication code validated"),delete repl.repl.running,a(b))})});j.write(i),j.end()})):(console.log("Not running in an interactive session - returning"),void a(null)):(console.log("Missing important authorisation information. Check that google:client_id and google:client_secret are set."),repl&&repl.repl?(b=repl.repl.eval,console.log("Set client ID now? : [yN] "),void(repl.repl.eval=function(c,d,e,f){var g=/\n.*/m;c=(c||"").replace(/\(/,""),c=c.replace(g,""),c.match(/[yY]/)?(console.log("Enter client ID: "),repl.repl.eval=function(c){c=(c||"").replace(/\(/,""),c=c.replace(g,""),x=c,console.log("Enter client secret: "),repl.repl.eval=function(c){c=(c||"").replace(/\(/,""),c=c.replace(g,""),repl.repl.eval=b,y=c,w.set("google:client_id",x),w.set("google:client_secret",y),w.save(function(b){b?(console.log("Error saving configuration"),a(null)):C(a)})}}):(repl.repl.prompt="Gator data server > ",repl.repl.eval=b,a(null))})):(console.log("Not running in an interactive session - returning"),void a(null)))},D=function(a,b){var c=require("querystring"),d=c.stringify({client_id:x,client_secret:y,refresh_token:a,grant_type:"refresh_token"}),e=require("https").request({host:"accounts.google.com",path:"/o/oauth2/token",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded","Content-Length":d.length}},function(a){a.setEncoding("utf8");var c="";a.on("data",function(a){c+=a}),a.on("end",function(){var a=JSON.parse(c);b(a)})});e.write(d),e.end()};g=function(a){B(function(b){b?(MASCP.GOOGLE_AUTH_TOKEN=b.token,a&&a.call(null)):(console.log("Could not authorize"),a&&a.call(null,{cause:"Could not authorize"}))})},h=function(a,b,c,d,e,f){var h={"GData-Version":"3.0"},i=e||"GET";if("GET"!=i&&(h={}),"POST"==i&&(h["Content-Type"]="application/atom+xml"),i.match(/:/)&&(h["Content-Type"]=i.split(":")[1],i=i.split(":")[0]),!MASCP.GOOGLE_AUTH_TOKEN){var j=arguments.callee;return void g(function(e){e?d.call(null,e):j.call(null,a,b,c,d)})}h.Authorization="Bearer "+MASCP.GOOGLE_AUTH_TOKEN,c&&(h["If-None-Match"]=c);var k=require("https"),l=k.request({host:a,path:b,headers:h,method:i},function(a){a.setEncoding("utf8");var b="";a.on("data",function(a){b+=a}),a.on("end",function(){if(a.statusCode>300)return void d.call(null,{cause:{status:a.statusCode}});var c=b.length>0?a.headers["content-type"].match(/json/)?JSON.parse(b):b:null;d.call(null,null,c)})});f&&l.write(f),l.end(),l.on("error",function(a){d.call(null,{cause:a})})},MASCP.GoogledataReader.authenticate=g}else{m="openid profile email https://www.googleapis.com/auth/drive.install https://www.googleapis.com/auth/drive.appdata https://www.googleapis.com/auth/drive https://spreadsheets.google.com/feeds/";var E=function(a,b,c){var d=document.getElementsByTagName("head")[0],e=document.createElement("script"),f="public",g="";e.type="text/javascript",e.setAttribute("id","ssheet-"+a),MASCP.GOOGLE_AUTH_TOKEN&&c&&(g="&access_token="+MASCP.GOOGLE_AUTH_TOKEN,f="private"),e.src="https://spreadsheets.google.com/feeds/cells/"+a+"/1/"+f+"/basic?alt=json-in-script&callback=cback"+a+g;var h=function(c){c.target===e&&(window.removeEventListener&&window.removeEventListener("error",h),e.parentNode&&(e.parentNode.removeChild(e),b.call(null,{cause:{status:""},message:"Could not load data via script tag"},a)))};e.addEventListener("error",h,!1),window.addEventListener("error",h,!1),window["cback"+a]=function(c){delete window["cback"+a],window.removeEventListener&&window.removeEventListener("error",h),b.call(null,null,n(c))};try{d.appendChild(e)}catch(i){b.call(null,{cause:{status:""},object:i})}},F=!1,G=[],H=!1;g=function(a,b){if(!("withCredentials"in new XMLHttpRequest))return void a.call(null,{cause:"Browser not supported"});if(MASCP.GOOGLE_AUTH_TOKEN)return void a.call(null);if(F)return void G.push(a);if(!gapi||!gapi.auth||!gapi.auth.authorize)return void a.call(null,{cause:"No google auth library"});if(!MASCP.GOOGLE_CLIENT_ID)return void a.call(null,{cause:"No client ID set (MASCP.GOOGLE_CLIENT_ID)"});var c={client_id:MASCP.GOOGLE_CLIENT_ID,scope:m,immediate:!0,response_type:"token id_token"};F=!0;var d=!0;return b&&(d=!1),window.event&&(d=window.event?window.event.which:null),!window.event&&"event"in window&&(d=!1),!d&&H?(F=!1,void a.call(null,{cause:"No user event"})):void setTimeout(function(){var b=setTimeout(function(){F=!1;var b={cause:"Failed to return from auth"};a.call(null,b),G.forEach(function(c){c!==a&&c.call(null,b)}),G=[]},3e3);gapi.auth.authorize(c,function(e){if(clearTimeout(b),e&&!e.error)return MASCP.GOOGLE_AUTH_TOKEN=e.access_token,window.setTimeout(function(){console.log("Google token has timed out, forcing refresh"),delete MASCP.GOOGLE_AUTH_TOKEN,g(function(){})},1e3*parseInt(e.expires_in)),F=!1,a.call(null),G.forEach(function(b){b!==a&&b.call(null)}),void(G=[]);if(e&&e.error&&"immediate_failed"!==e.error){F=!1;var f={cause:e.error};a.call(null,f),G.forEach(function(b){b!==a&&b.call(null,f)}),G=[]}else if(F=!1,c.immediate){if(!d){var h=function(a){c.immediate=!1,gapi.auth.authorize(c,function(b){b&&!b.error?(MASCP.GOOGLE_AUTH_TOKEN=b.access_token,window.setTimeout(function(){console.log("Google token has timed out, forcing refresh"),delete MASCP.GOOGLE_AUTH_TOKEN,g(function(){})},1e3*parseInt(b.expires_in)),a.call(null)):a.call(null,{cause:b?b.error:"No auth result"})})};return H=!0,a.call(null,{cause:"No user event",authorize:h}),void(G&&(G.forEach(function(b){b!==a&&b.call(null,{cause:"No user event",authorize:h})}),G=[]))}return c.immediate=!1,void gapi.auth.authorize(c,arguments.callee)}})},1)};var I=function(a){if(MASCP.GATOR_AUTH_TOKEN&&MASCP.LOGGEDIN)return console.log("Existing token"),void setTimeout(a,0);self_func=arguments.callee;var b=[];I=function(a){b.push(a)},g(function(c){MASCP.GATOR_AUTH_TOKEN=gapi.auth.getToken().id_token,MASCP.LOGGEDIN=!1,MASCP.GOOGLE_AUTH_TOKEN=MASCP.GATOR_AUTH_TOKEN,h(l,"/exchangetoken",null,function(c,d){console.log("Got auth token"),I=self_func,MASCP.LOGGEDIN=!0,MASCP.GATOR_AUTH_TOKEN=d,a(),b.forEach(function(a){setTimeout(a,0)}),b=[]},"POST:application/json",null),MASCP.GOOGLE_AUTH_TOKEN=gapi.auth.getToken().access_token})};h=function(a,b,c,d,e,f,i){g(function(g){if(g)return void d.call(null,g);var j=new XMLHttpRequest;if(!("withCredentials"in j))return void d.call(null,{cause:"Browser not supported"});var k=e||"GET";try{j.open(k.replace(/:.*/,""),"https://"+a+b)}catch(l){return void d.call(null,{cause:"Access is denied.",error:l,status:0})}j.setRequestHeader("Authorization","Bearer "+MASCP.GOOGLE_AUTH_TOKEN),"GET"==k&&j.setRequestHeader("GData-Version","3.0"),"POST"==k&&j.setRequestHeader("Content-Type","application/atom+xml"),k.match(/:/)&&(j.setRequestHeader("Content-Type",k.split(":")[1]),k=k.split(":")[0]),c&&"PUT"!==k&&!k.match(/:/)&&j.setRequestHeader("If-None-Match",c),c&&"PUT"==k&&j.setRequestHeader("If-Match",c),j.onreadystatechange=function(g){if(4==j.readyState)if(j.status<300&&j.status>=200){var k=j.responseText.length>0?j.getResponseHeader("Content-Type").match(/json/)?JSON.parse(j.responseText):j.responseText:null;null!==d&&d.call(null,null,k),d=null}else j.status>=500&&(!i||1e3>i)?(i=i?2*i:100,setTimeout(function(){h(a,b,c,d,e,f,i)},i)):(null!==d&&d.call(null,{cause:{status:j.status}}),d=null)},j.onerror=function(a){d&&d.call(null,{cause:{status:j.status}})},j.send(f)})};var J=b;b=function(a,b,c){if(!a&&c)return void g(c,!0);var d=!0;a.match(/^spreadsheet/)||(d=!1);var e=a.replace(/^spreadsheet:/g,"");!d||b||MASCP.GOOGLE_AUTH_TOKEN?J(a,b,function(a,b){if(a){if(a.cause&&304==a.cause.status)return void c.call(null,a);d?E(e,function(a,b){a?E(e,c,!0):c.call(null,a,b)},!1):c.call(null,a)}else c.call(null,null,b)}):E(e,function(d,f){d?r(function(d,f){return d?void c.call(null,d):void(0==f?J(a,b,function(a,b){if(a){if("No user event"==a.cause||"Access is denied."==a.cause)return void c.call(null,a);E(e,c,!0)}else c.call(null,null,b)}):c.call(null,{cause:"Google session timed out"}))}):c.call(null,null,f)})}}MASCP.GoogledataReader.isLoggedOut=r,MASCP.GoogledataReader.prototype.getDocumentList=c,MASCP.GoogledataReader.prototype.getDocument=b,MASCP.GoogledataReader.prototype.getPermissions=d,MASCP.GoogledataReader.prototype.getMimetype=f,MASCP.GoogledataReader.prototype.updateOrInsertRow=i,MASCP.GoogledataReader.prototype.getPreferences=function(a,b){return a||(a="MASCP GATOR PREFS"),s(a,"application/json+domaintool-session",b)},MASCP.GoogledataReader.prototype.writePreferences=function(a,b){return v(a,"application/json+domaintool-session",b)},MASCP.GoogledataReader.prototype.createPreferences=function(a,b){return u({parent:a,content:{},name:"New annotation session.domaintoolsession"},"application/json+domaintool-session",function(a,c,d){b.call(null,a,c,d,"New annotation session")})},MASCP.GoogledataReader.prototype.createFile=function(a,b,c,d,e){return u({parent:a,content:b,name:c},d,function(a,b,d){e.call(null,a,b,d,c)})},MASCP.GoogledataReader.prototype.getSyncableFile=function(a,b,c){c||(c="application/json");var e={getData:function(){return"Not ready"},ready:!1};return s(a,c,function(f,g,h){if(f)return void b.call(null,f);e.getData=function(){return g};var i,j=null;e.sync=function(){j&&(clearTimeout(j),j=null),j=setTimeout(function(){var b=!1;e.sync=function(){b=!0},"string"!=typeof a&&(a.content=g),v(a,c,function(a){j=null,e.sync=i,b&&e.sync()})},1e3)},i=e.sync,e.owner=a.owner,"string"!=typeof a&&h?d(h,function(c,d){a.permissions=d,e.permissions=d,bean.fire(e,"ready"),e.ready=!0,b.call(null,null,e)}):(e.permissions={read:!0,write:!0},bean.fire(e,"ready"),e.ready=!0,b.call(null,null,e))}),e},MASCP.GoogledataReader.prototype.addWatchedDocument=function(a,b,c,d){var e=this;c||(c=function(a){for(var b in a.data)if(""==b||b.match(/\s/))delete a.data[b];else{var c=a.data[b];delete a.data[b],a.data[b.toLowerCase()]={data:c,retrieved:a.retrieved,etag:a.etag,title:a.title}}return delete a.retrieved,delete a.etag,delete a.title,a.data});var f=(new MASCP.GoogledataReader).createReader(b,c);f.bind("error",function(a){d.call(null,a)}),f.bind("ready",function(b){var g=this.title;e.getPreferences(a,function(h,i){if(h)return void d.call(null,{status:"preferences",original_error:h});i.user_datasets||(i.user_datasets={});var j=!1;b&&b.liveClass&&(j=!0,i.user_datasets[b.liveClass]=i.user_datasets[b.liveClass]||{},i.user_datasets[b.liveClass].render_options={},i.user_datasets[b.liveClass].title=g,i.user_datasets[b.liveClass].type="liveClass"),b&&b.gatorURL&&(j=!0,i.user_datasets[b.gatorURL]=i.user_datasets[b.gatorURL]||{},i.user_datasets[b.gatorURL].title=g,i.user_datasets[b.gatorURL].type="gatorURL",b&&b.defaults&&(i.user_datasets[b.gatorURL].render_options=b.defaults)),b&&b.metadata&&b.metadata.length>0&&b.metadata[0]["msdata-version"]&&(j=!0,i.user_datasets[f.datasetname]=i.user_datasets[f.datasetname]||{},i.user_datasets[f.datasetname].parser_function=c.toString(),i.user_datasets[f.datasetname].title=g,i.user_datasets[f.datasetname].type="dataset",b&&b.defaults?i.user_datasets[f.datasetname].render_options=b.defaults:i.user_datasets[f.datasetname].render_options={renderer:"msdata:default:"+b.metadata[0]["msdata-version"],track:g,icons:"/sugars.svg"}),j||(i.user_datasets[f.datasetname]=i.user_datasets[f.datasetname]||{},i.user_datasets[f.datasetname].parser_function=c.toString(),i.user_datasets[f.datasetname].title=g,i.user_datasets[f.datasetname].type="dataset",b&&b.defaults&&(i.user_datasets[f.datasetname].render_options=b.defaults)),e.writePreferences(a,function(a,b){return a?void d.call(null,{status:"preferences",original_error:a}):void d.call(null,null,g)})})})},MASCP.GoogledataReader.prototype.removeWatchedDocument=function(a,b,c){var d=this;d.getPreferences(a,function(e,f){return e?void c.call(null,{status:"preferences",original_error:e}):(f.user_datasets||(f.user_datasets={}),b in f.user_datasets?delete f.user_datasets[b]:c.call(),void d.writePreferences(a,function(a,b){return a?void c.call(null,{status:"preferences",original_error:a}):void c.call()}))})},MASCP.GoogledataReader.prototype.listWatchedDocuments=function(a,b){this.getPreferences(a,function(a,c){if(a)return"No user event"===a.cause?void console.log("Consuming no user event"):void b.call(null,{status:"preferences",original_error:a});var d=c.user_datasets;b.call(null,null,d)})},MASCP.GoogledataReader.prototype.readWatchedDocuments=function(a,b){var c=this;c.getPreferences(a,function(a,c){return a?"No user event"===a.cause?void console.log("Consuming no user event"):"Browser not supported"==a.cause?void console.log("Consuming no browser support"):void b.call(null,{status:"preferences",original_error:a}):void MASCP.IterateServicesFromConfig(c.user_datasets,b)})},MASCP.AuthenticateGator=I,MASCP.GoogledataReader.prototype.newBackendReader=function(a){var b={type:"GET",dataType:"json",data:{}},c=new MASCP.UserdataReader(null,k+"/data/latest/combined/");return c.datasetname="combined",c.requestData=function(){var a=this.agi.toLowerCase(),c="/"==this._endpointURL.slice(-1)?this._endpointURL+a:this._endpointURL+"/"+a;return b.url=c,b},c._dataReceived=function(b,d){var e=b.data.filter(function(b){return b.dataset.indexOf(a)>=0})[0];if("glycodomain"==a&&(e=b.data.filter(function(a){return"application/json+glycodomain"==a.metadata.mimetype})[0],console.log(e)),"combined"==a){var f={};b.data.forEach(function(a){var b=a.metadata.mimetype;a.data.forEach(function(b){b.dataset=a.dataset}),f[b]=(f[b]||[]).concat(a.data)}),e={data:f}}var g=Object.getPrototypeOf(c)._dataReceived.call(c,e,d);return g&&(c.result._raw_data=e),console.log(g),g},I(function(){b.auth=MASCP.GATOR_AUTH_TOKEN,bean.fire(c,"ready")}),c},MASCP.GoogledataReader.prototype.createReader=function(a,b){return this.newBackendReader(a)}}(),"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";
if(MASCP.InterproReader=MASCP.buildService(function(a){return a&&(this._raw_data||a.data?this._raw_data=a:(this._raw_data={data:[]},this._raw_data.data.push(a))),this}),MASCP.InterproReader.SERVICE_URL="http://gator.masc-proteomics.org/interpro.pl?",MASCP.InterproReader.prototype.requestData=function(){return{type:"GET",dataType:"json",data:{agi:this.agi,service:"interpro"}}},function(){var a=MASCP.InterproReader.prototype.retrieve;MASCP.InterproReader.prototype.retrieve=function(b,c){var d=this;this.agi||(this.agi=b);var e=arguments.callee,f=c;return null===this.sequence||"undefined"==typeof this.sequence?(new MASCP.TairReader(d.agi).bind("resultReceived",function(){d.sequence=this.result.getSequence()||"",e.call(d,d.agi,f)}).bind("error",function(a){d.trigger("error",[a])}).retrieve(),this):(a!==MASCP.Service.prototype.retrieve&&(a=MASCP.Service.prototype.retrieve),a.call(d,d.agi,f),this)}}(),MASCP.InterproReader.Result=MASCP.InterproReader.Result,MASCP.InterproReader.Result.prototype.getDomains=function(){if(!this._raw_data||0===this._raw_data.data.length)return{};if(this._peptides_by_domain)return this._peptides_by_domain;for(var a={},b={},c=this._raw_data.data,d=0;d<c.length;d++){var e=a[c[d].interpro]||[];e.push(this.sequence.substring(c[d].start,c[d].end)),b[c[d].interpro]=c[d].description,a[c[d].interpro]=e}return this._peptides_by_domain=a,a},MASCP.InterproReader.prototype.setupSequenceRenderer=function(a){var b=this;return this.bind("resultReceived",function(){this.agi;MASCP.registerGroup("interpro_domains",{fullname:"Interpro domains",color:"#000000"});var c="interpro_controller",d=".active .overlay { background: #000000; } .active a { color: #000000; text-decoration: none !important; }  :indeterminate { background: #ff0000; } .tracks .active { background: #0000ff; } .inactive a { text-decoration: none; } .inactive { display: none; }";MASCP.registerLayer(c,{fullname:"Interpro domains",color:"#000000",css:d}),MASCP.getLayer("interpro_controller").href="",this.result.sequence=a.sequence;var e=this.result.getDomains();for(var f in e)if(e.hasOwnProperty(f)){var g=null;g=f;var h=MASCP.registerLayer("interpro_domain_"+g,{fullname:g,group:"interpro_domains",color:"#000000",css:d});h.href="http://www.ebi.ac.uk/interpro/IEntry?ac="+g;for(var i=e[g],j=0;j<i.length;j++){var k=a.getAminoAcidsByPeptide(i[j]),l="interpro_domain_"+g;k.addToLayer(l),k.addToLayer(c)}}a.createGroupController&&a.createGroupController("interpro_controller","interpro_domains"),a.trigger("resultsRendered",[b])}),this},MASCP.InterproReader.Result.prototype.render=function(){},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.P3dbReader=MASCP.buildService(function(a){return this._raw_data=a,this}),MASCP.P3dbReader.SERVICE_URL="http://p3db.org/gator.php?",MASCP.P3dbReader.prototype.requestData=function(){var a=this.agi.toLowerCase();return{type:"GET",dataType:"json",data:{agi:a,service:"p3db"}}},MASCP.P3dbReader.Result=MASCP.P3dbReader.Result,MASCP.P3dbReader.Result.prototype.getPeptides=function(){if(this._peptides)return this._peptides;if(this._long_name_map={},!this._raw_data||!this._raw_data.peptides)return[];for(var a=[],b=0;b<this._raw_data.peptides.length;b++){var c=this._raw_data.peptides[b],d={sequence:this._cleanSequence(c)};a.push(d)}return this._peptides=a,a},MASCP.P3dbReader.Result.prototype.getOrthologousPeptides=function(a){var b=this;if(!this._raw_data.orthologs)return[];var c=[];return this._raw_data.orthologs.forEach(function(d){if(d.organism===a&&d.peptides)for(var e=0;e<d.peptides.length;e++){var f=d.peptides[e],g={sequence:b._cleanSequence(f)};c.push(g)}}),c},MASCP.P3dbReader.Result.prototype.getOrganisms=function(){if(!this._raw_data.orthologs)return[];var a=[];return this._raw_data.orthologs.forEach(function(b){a.push({id:b.organism,name:b.name})}),a},MASCP.P3dbReader.Result.prototype._cleanSequence=function(a){return a.replace(/[^A-Z]/g,"")},MASCP.P3dbReader.prototype.setupSequenceRenderer=function(a){var b=this,c="#5533ff";return MASCP.registerGroup("p3db_experimental",{fullname:"P3DB (mod)",color:c}),this.bind("resultReceived",function(){var d=this.result,e=d.getPeptides();e.length>0&&MASCP.registerLayer("p3db_controller",{fullname:"P3DB (mod)",color:c});for(var f=0;f<e.length;f++){var g=e[f].sequence,h=a.getAminoAcidsByPeptide(g);h.addToLayer("p3db_controller")}d.getOrganisms().forEach(function(b){if(3702!==b.id){var e="p3db_tax_"+b.id,f=d.getOrthologousPeptides(b.id);f.length>0&&MASCP.registerLayer(e,{fullname:b.name,group:"p3db_experimental",color:c});for(var g=0;g<f.length;g++){var h=f[g].sequence,i=a.getAminoAcidsByPeptide(h);i.addToLayer(e)}}}),a.createGroupController&&a.createGroupController("p3db_controller","p3db_experimental"),a.trigger("resultsRendered",[b])}),this},MASCP.P3dbReader.Result.prototype.render=function(){},MASCP.Pep2ProReader=MASCP.buildService(function(a){return this._raw_data=a,a&&(this._populate_spectra(a),this._populate_peptides(a)),this}),MASCP.Pep2ProReader.prototype.requestData=function(){var a=this.agi;return{type:"GET",dataType:"json",data:{agi:a,service:"pep2pro"}}},MASCP.Pep2ProReader.SERVICE_URL="http://fgcz-pep2pro.uzh.ch/mascp_gator.php?",MASCP.Pep2ProReader.Result=MASCP.Pep2ProReader.Result,MASCP.Pep2ProReader.Result.prototype.tissues=function(){return this._tissues},MASCP.Pep2ProReader.Result.prototype.getPeptides=function(){return this._peptides},MASCP.Pep2ProReader.Result.prototype=MASCP.extend(MASCP.Pep2ProReader.Result.prototype,{spectra:null,peptide_counts_by_tissue:null,sequence:null}),MASCP.Pep2ProReader.Result.prototype._populate_spectra=function(a){if(this.spectra={},this._tissues=[],this._long_name_map={},a&&a.tissues)for(var b=0;b<a.tissues.length;b++)this._tissues[b]=a.tissues[b]["PO:tissue"]||{},this._tissues[b].long_name=a.tissues[b].tissue,this._long_name_map[this._tissues[b]]=a.tissues[b].tissue,this.spectra[a.tissues[b]["PO:tissue"]]=parseInt(a.tissues[b].qty_spectra,10)},MASCP.Pep2ProReader.Result.prototype._populate_peptides=function(a){if(this.peptide_counts_by_tissue={},a&&a.peptides){this.sequence=a.sequence,this._peptides=[];for(var b=0;b<a.peptides.length;b++){var c=a.peptides[b];this._peptides.push(c.sequence);for(var d=c.position+"-"+(parseInt(c.position,10)+parseInt(c.sequence.length,10)),e=0;e<c.tissues.length;e++){var f=c.tissues[e];this.peptide_counts_by_tissue[f["PO:tissue"]]||(this.peptide_counts_by_tissue[f["PO:tissue"]]={}),this.peptide_counts_by_tissue[f["PO:tissue"]][d]=parseInt(f.qty_spectra,10)}}}},MASCP.Pep2ProReader.Result.prototype.render=function(){},MASCP.Pep2ProReader.prototype._rendererRunner=function(a){for(var b=this.result?this.result.tissues():[],c=b.length-1;c>=0;c--){var d=b[c];if(!(this.result.spectra[d]<1)){var e=this.result.peptide_counts_by_tissue[d],f="pep2pro_by_tissue_"+d,g=" .overlay { display: none; } .tracks .active { fill: #000099; } .inactive { display: none; } .active .overlay { display: block; top: 0px; background: #000099; } ";MASCP.registerLayer(f,{fullname:this.result._long_name_map[d],group:"pep2pro",color:"#000099",css:g,data:{po:d,count:e}});for(var h=this._normalise(this._mergeCounts(e)),i=1,j=null;i<=h.length;)null!==j&&("undefined"!=typeof h[i]&&i!=h.length||(a.getAminoAcidsByPosition([j])[0].addBoxOverlay(f,i-1-j),j=null)),h[i]>0&&null===j&&(j=i),i+=1}}},MASCP.Pep2ProReader.prototype._groupSummary=function(a){var b=this.result?this.result.tissues():[],c=[],d=function(){var a=[];for(var b in this)this.hasOwnProperty(b)&&a.push(b);return a.sort().join(",")};for(var e in b)if(b.hasOwnProperty(e)){var f=b[e];if(this.result.spectra[f]<1)continue;for(var g=this._mergeCounts(this.result.peptide_counts_by_tissue[f]),h=0;h<g.length;h++)g[h]>0&&(c[h]||(c[h]={},c[h].tissue=d),c[h][f]=!0)}var i=0,j=null,k=null,l="pep2pro_controller",m=" .overlay { display: none; } .tracks .active { fill: #000099; } .inactive { display: none; } .active .overlay { display: block; top: 0px; background: #000099; } ";MASCP.registerLayer(l,{fullname:"Pep2Pro MS/MS",color:"#000099",css:m});var n=this.result.agi,o=n.replace(/\.\d/,"");for(MASCP.getLayer("pep2pro_controller").href="http://fgcz-pep2pro.uzh.ch/locus.php?"+o;i<=c.length;)if(0>=i)i+=1;else{if((!c[i]||c[i].tissue()!=k||i==c.length)&&null!==j){var p=i-j;c[i]||(p-=1),a.getAminoAcidsByPosition([j])[0].addBoxOverlay(l,p),j=null}c[i]&&null===j&&(k=c[i].tissue(),j=i),i+=1}a.createGroupController&&a.createGroupController("pep2pro_controller","pep2pro")},MASCP.Pep2ProReader.prototype.setupSequenceRenderer=function(a){var b=this;return this.bind("resultReceived",function(){return MASCP.registerGroup("pep2pro",{fullname:"Pep2Pro data",hide_member_controllers:!0,hide_group_controller:!0,color:"#000099"}),a.sequence!=this.result.sequence&&""!=this.result.sequence?(a.bind("sequenceChange",function(){a.unbind("sequenceChange",arguments.callee),b._groupSummary(a),b._rendererRunner(a),a.trigger("resultsRendered",[b])}),void a.setSequence(this.result.sequence)):(b._groupSummary(a),b._rendererRunner(a),a.trigger("resultsRendered",[b]),void 0)}),this},MASCP.Pep2ProReader.prototype._normalise=function(a){var b=0,c=0;for(c=0;c<a.length;c++)a[c]&&a[c]>b&&(b=a[c]);for(c=0;c<a.length;c++)a[c]&&a[c]>0&&(a[c]=1*a[c]/b);return a},MASCP.Pep2ProReader.prototype._mergeCounts=function(a){var b=[];for(var c in a)if(a.hasOwnProperty(c))for(var d=c.split("-"),e=parseInt(d[0],10),f=parseInt(d[1],10),g=e;f>=g;g++)b[g]||(b[g]=0),b[g]+=a[c];return b},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.PhosphatReader=MASCP.buildService(function(a){if(a&&a.result&&!this._sequence)for(var b=0;b<a.result.length;b++)if("Imported protein - no info"==a.result[b].prot_sequence){var c=a.result[b].code;c=c.replace(/\s+$/,""),this._sequence=MASCP.getSequence(c);break}return a&&a.experimental&&a.relatives&&a.predicted?(this._raw_data=a,this):(a&&"getPredictedAa"==a.request_method&&(this._raw_data||(this._raw_data={}),this._raw_data.predicted=a),a&&"getExperimentsModAa"==a.request_method&&(this._raw_data||(this._raw_data={}),this._raw_data.experimental=a),a&&"getRelatives"==a.request_method&&(this._raw_data||(this._raw_data={}),this._raw_data.relatives=a),this)}),MASCP.PhosphatReader.SERVICE_URL="http://gator.masc-proteomics.org/proxy.pl?",MASCP.PhosphatReader.prototype.requestData=function(){var a=[null,this.agi];this.method||this._methods||(this._methods=["getPredictedAa","getExperimentsModAa","getRelatives"]),this.combine&&(this._methods=[]);var b=this._methods[0];return"getRelatives"==b&&(a=[this.agi]),{type:"POST",dataType:"json",data:{id:1,method:b,agi:this.agi,params:encodeURI(a.toJSON?a.toJSON():JSON.stringify(a)),service:"phosphat"}}},function(a){var b=a.prototype._dataReceived;a.prototype._dataReceived=function(a,c){if(null===a)return b.call(this,null,c);a.request_method=this._methods?this._methods[0]:null,this._methods&&this._methods.shift(),a.error&&0===a.error.indexOf("SELECT")&&(a.error=null);var d=b.call(this,a,c);return this.result&&this.result._raw_data&&this.result._raw_data.experimental&&this.result._raw_data.relatives&&this.result._raw_data.predicted?(this._methods=null,d):void(d&&this.retrieve())}}(MASCP.PhosphatReader),MASCP.PhosphatReader.Result=MASCP.PhosphatReader.Result,MASCP.PhosphatReader.Result.prototype.getAllPredictedPositions=function(){var a=[],b=this._raw_data.predicted.result;for(var c in b)if(b.hasOwnProperty(c)){var d=this._raw_data.predicted.result[c];d.prd_score>0&&a.push(d.prd_position)}return a},MASCP.PhosphatReader.Result.prototype.getAllExperimentalPositions=function(){var a={},b=this._raw_data.experimental.result;for(var c in b)if(b.hasOwnProperty(c)){var d=this._raw_data.experimental.result[c],e=d.pep_sequence||"";if(e=e.replace(/[^A-Z]/g,""),"phos"!=d.modificationType)continue;var f=this._sequence||d.prot_sequence,g=f.indexOf(e);if(0>g)continue;g+=d.position,a[g]=1}var h=[];for(var i in a)a.hasOwnProperty(i)&&h.push(parseInt(i,10));return h},MASCP.PhosphatReader.Result.prototype.getAllExperimentalPhosphoPeptides=function(){var a={},b=this._raw_data.experimental.result;for(var c in b)if(b.hasOwnProperty(c)){var d=this._raw_data.experimental.result[c],e=d.pep_sequence||"";if(e=e.replace(/[^A-Z]/g,""),"phos"!=d.modificationType)continue;var f=this._sequence||d.prot_sequence,g=f.indexOf(e);if(g>=0){var h=""+g+"-"+e.length;a[h]=a[h]||[g,e.length],a[h].indexOf(d.position+g,2)<=0&&a[h].push(d.position+g)}}var i=[];for(var j in a)a.hasOwnProperty(j)&&i.push(a[j]);return i},MASCP.PhosphatReader.Result.prototype.getSpectra=function(){if(!this._raw_data.relatives||!this._raw_data.relatives.result)return{};for(var a={},b=this._raw_data.relatives.result,c=0;c<b.length;c++){var d=b[c].Tissue;a[d]||(a[d]=0),a[d]+=1}return a},MASCP.PhosphatReader.Result.prototype.render=function(){return null},MASCP.PhosphatReader.prototype.setupSequenceRenderer=function(a){var b=this;return this.bind("resultReceived",function(){var c=[],d=this.result.getAllExperimentalPhosphoPeptides();return 0===d.length?void a.trigger("resultsRendered",[b]):(MASCP.registerLayer("phosphat_experimental",{fullname:"PhosPhAt (mod)",color:"#000000",css:".active { background: #999999; color: #000000; font-weight: bolder; } .tracks .active { background: #000000; fill: #000000; } .inactive { display: none; }"}),MASCP.registerGroup("phosphat_peptides",{fullname:"PhosPhAt peptides"}),a.createGroupController&&a.createGroupController("phosphat_experimental","phosphat_peptides"),d.forEach(function(b,d){MASCP.registerLayer("phosphat_peptide_"+d,{fullname:"PhosPhAt MS/MS",group:"phosphat_peptides",color:"#000000",css:".active { background: #999999; color: #000000; } .tracks .active { background: #000000; fill: #000000; } .inactive { display: none; }"});var e=b.shift(),f=b.shift(),g=a.getAminoAcidsByPosition([e+1])[0];g&&(g.addBoxOverlay("phosphat_peptide_"+d,f,.5),c.push(g.addBoxOverlay("phosphat_experimental",f,.5))),a.getAminoAcidsByPosition(this).forEach(function(a){a.addToLayer("phosphat_peptide_"+d,{height:20,offset:-2.5}),c=c.concat(a.addToLayer("phosphat_experimental",{height:20,offset:-2.5}))})}),bean.add(MASCP.getGroup("phosphat_peptides"),"visibilityChange",function(b,d){b==a&&c.forEach(function(a){a.style||a.setAttribute("style",""),a.style.display=d?"none":"inline"})}),MASCP.getLayer("phosphat_experimental")&&(MASCP.getLayer("phosphat_experimental").href="http://phosphat.mpimp-golm.mpg.de/app.html?agi="+this.result.agi),void a.trigger("resultsRendered",[b]))}),this},MASCP.PpdbReader=MASCP.buildService(function(a){if(!a)return this;var b=function(){for(var a=this._raw_data.getElementsByTagName("FEATURE"),b=[],c={},d={},e=0;e<a.length;e++){var f=a[e].getElementsByTagName("TYPE")[0],g=f.textContent||f.text||f.nodeValue;if("Peptide"==g){var h=a[e].getAttribute("label");c[h]||(c[h]={experiments:[]});var i=parseInt(a[e].getElementsByTagName("GROUP")[0].getAttribute("id"),10);c[h].experiments.push(i),d[i]=!0}}for(var j in c)if(c.hasOwnProperty(j)){var k={sequence:j,experiments:c[j].experiments};b.push(k)}this._experiments=[];for(var l in d)d.hasOwnProperty(l)&&this._experiments.push(parseInt(l,10));return b};if(this._raw_data=a,a.getElementsByTagName){var c=b.call(this);this._raw_data={experiments:this._experiments,peptides:c}}return this._experiments=this._raw_data.experiments,this._peptides=this._raw_data.peptides,this}),MASCP.PpdbReader.prototype.requestData=function(){var a=(this.agi+"").replace(/\..*$/,""),b="json";return(this._endpointURL||"").indexOf("xml")>=0&&(b="xml"),{type:"GET",dataType:b,data:{segment:a,agi:this.agi,service:"ppdb"}}},MASCP.PpdbReader.SERVICE_URL="http://ppdb.tc.cornell.edu/das/arabidopsis/features/?output=xml",MASCP.PpdbReader.Result=MASCP.PpdbReader.Result,MASCP.PpdbReader.Result.prototype=MASCP.extend(MASCP.PpdbReader.Result.prototype,{spectra:null,peptide_counts_by_tissue:null,sequence:null}),MASCP.PpdbReader.Result.prototype.render=function(){return null},MASCP.PpdbReader.Result.prototype.getExperiments=function(){return this._experiments||[]},MASCP.PpdbReader.Result.prototype.getPeptides=function(){var a=this._peptides||[];return a.forEach(function(a){a.toString=function(a){return function(){return a.sequence}}(a)}),a},MASCP.PpdbReader.prototype.setupSequenceRenderer=function(a){var b=this;return this.bind("resultReceived",function(){MASCP.registerGroup("ppdb",{fullname:"PPDB spectra data",hide_member_controllers:!0,hide_group_controller:!0,color:"#aa9900"});var c="ppdb_controller",d=".active .overlay { background: #aa9900; } .active a { color: #000000; text-decoration: none !important; }  :indeterminate { background: #ff0000; } .tracks .active { background: #0000ff; } .inactive a { text-decoration: none; } .inactive { display: none; }";MASCP.registerLayer(c,{fullname:"PPDB MS/MS",color:"#aa9900",css:d}),a.createGroupController&&a.createGroupController("ppdb_controller","ppdb");for(var e=this.result.getPeptides(),f=this.result.getExperiments(),g=0;g<f.length;g++){var h="ppdb_experiment"+f[g];MASCP.registerLayer(h,{fullname:"Experiment "+f[g],group:"ppdb",color:"#aa9900",css:d}),MASCP.getLayer(h).href="http://ppdb.tc.cornell.edu/dbsearch/searchsample.aspx?exprid="+f[g];for(var i=0;i<e.length;i++){var j=e[i];if(!(e[i].experiments.indexOf(f[g])<0)){var k=a.getAminoAcidsByPeptide(j.sequence);k.addToLayer(h),k.addToLayer(c)}}}a.trigger("resultsRendered",[b])}),this},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.ProcessingReader=MASCP.buildService(function(a){return this._raw_data=a,this}),MASCP.ProcessingReader.SERVICE_URL="?",MASCP.ProcessingReader.prototype.requestData=function(){var a=this.agi;return{type:"GET",dataType:"json",data:{agi:a,service:"processing"}}},MASCP.ProcessingReader.Result=MASCP.ProcessingReader.Result,MASCP.ProcessingReader.Result.prototype.getProcessing=function(){return this._raw_data&&this._raw_data.data&&this._raw_data.data.processing?this._raw_data.data.processing:[]},MASCP.ProcessingReader.Result.prototype._cleanSequence=function(a){return a.replace(/[^A-Z]/g,"")},MASCP.ProcessingReader.prototype.setupSequenceRenderer=function(a){var b=this,c=".active .overlay { background: #666666; } .active a { color: #000000; text-decoration: none !important; }  :indeterminate { background: #ff0000; } .tracks .active { background: #0000ff; } .inactive a { text-decoration: none; } .inactive { display: none; }";return this.bind("resultReceived",function(){var d=this.result.getProcessing(),e=a.sequence.indexOf(d);if(!(0>e)){MASCP.registerLayer("processing",{fullname:"N-Terminal (mod)",color:"#ffEEEE",css:c});var f=a.getAA(e+1+d.length);f&&f.addAnnotation("processing",1,{border:"rgb(150,0,0)",content:"Mat",angle:0}),a.trigger("resultsRendered",[b])}}),this},MASCP.ProcessingReader.Result.prototype.render=function(){},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.PromexReader=MASCP.buildService(function(a){return this._raw_data=a,this}),MASCP.PromexReader.SERVICE_URL="http://131.130.57.242/json/?",MASCP.PromexReader.prototype.requestData=function(){var a=(this.agi+"").replace(/\..*$/,"");return{type:"GET",dataType:"json",data:{agi:this.agi,ac:a,service:"promex"}}},MASCP.PromexReader.Result=MASCP.PromexReader.Result,MASCP.PromexReader.Result.prototype.getPeptides=function(){if(!this._raw_data||!this._raw_data.peptides)return[];for(var a=[],b=0;b<this._raw_data.peptides.length;b++)a.push(this._cleanSequence(this._raw_data.peptides[b].sequence));return a},MASCP.PromexReader.Result.prototype._cleanSequence=function(a){return a.replace(/[^A-Z]/g,"")},MASCP.PromexReader.prototype.setupSequenceRenderer=function(a){var b=this;MASCP.registerGroup("promex_experimental",{fullname:"ProMex spectra data",hide_member_controllers:!0,hide_group_controller:!0,color:"#ff9900"});var c="promex_controller",d=".active .overlay { background: #ff9900; } .active a { color: #000000; text-decoration: none !important; }  :indeterminate { background: #ff0000; } .tracks .active { background: #0000ff; } .inactive a { text-decoration: none; } .inactive { display: none; }";return MASCP.registerLayer(c,{fullname:"ProMEX MS/MS",color:"#ff9900",css:d}),this.bind("resultReceived",function(){var e=(this.result.agi+"").replace(/\..*$/,"");MASCP.getLayer("promex_controller").href="http://promex.pph.univie.ac.at/promex/?ac="+e;for(var f=this.result.getPeptides(),g=0;g<f.length;g++){MASCP.registerLayer("promex_experimental_spectrum_"+g,{fullname:"Spectrum",group:"promex_experimental",color:"#ff9900",css:d});var h=f[g],i=a.getAminoAcidsByPeptide(h);if(i&&0!==i.length){var j="promex_experimental_spectrum_"+g;i.addToLayer(j),i.addToLayer(c)}}a.trigger("resultsRendered",[b]),a.createGroupController&&a.createGroupController("promex_controller","promex_experimental")}),this},MASCP.PromexReader.Result.prototype.render=function(){},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.RippdbReader=MASCP.buildService(function(a){return this._raw_data=a,this}),MASCP.RippdbReader.SERVICE_URL="http://gator.masc-proteomics.org/rippdb.pl?",MASCP.RippdbReader.prototype.requestData=function(){var a=this.agi;return{type:"GET",dataType:"json",data:{agi:a,service:"rippdb"}}},MASCP.RippdbReader.Result=MASCP.RippdbReader.Result,MASCP.RippdbReader.Result.prototype.getSpectra=function(){return this._raw_data&&this._raw_data.spectra?this._raw_data.spectra:[]},MASCP.RippdbReader.Result.prototype._cleanSequence=function(a){return a.replace(/[^A-Z]/g,"")},MASCP.RippdbReader.prototype.setupSequenceRenderer=function(a){var b=this,c=".active .overlay { background: #666666; } .active a { color: #000000; text-decoration: none !important; }  :indeterminate { background: #ff0000; } .tracks .active { background: #0000ff; } .inactive a { text-decoration: none; } .inactive { display: none; }";return this.bind("resultReceived",function(){var d=this.result.getSpectra(),e="prippdb_experimental",f=[];d.length>0&&(MASCP.registerLayer(e,{fullname:"RIPP-DB (mod)",color:"#666666",css:c}),MASCP.registerGroup("prippdb_peptides",{fullname:"Phosphorylation Rippdb",hide_member_controllers:!0,hide_group_controller:!0,color:"#666666"}),a.createGroupController&&a.createGroupController("prippdb_experimental","prippdb_peptides"),bean.add(MASCP.getGroup("prippdb_peptides"),"visibilityChange",function(b,c){b==a&&f.forEach(function(a){a.style.display=c?"none":"inline"})}));for(var g=0;g<d.length;g++){var h=d[g],i=h.peptides;if(0!==i.length){var j="prippdb_spectrum_"+h.spectrum_id;MASCP.registerLayer(j,{fullname:"Spectrum "+h.spectrum_id,group:"prippdb_peptides",color:"#666666",css:c});for(var k=0;k<i.length;k++){var l=i[k].sequence,m=a.getAminoAcidsByPeptide(l);if(0!==m.length){m.addToLayer(j),f.push(m.addToLayer("prippdb_experimental"));for(var n=0;n<i[k].positions.length;n++)f=f.concat(m[i[k].positions[n]-1].addToLayer("prippdb_experimental",{height:20,offset:-2.5})),m[i[k].positions[n]-1].addToLayer(j,{height:20,offset:-2.5})}}}}a.trigger("resultsRendered",[b])}),this},MASCP.RippdbReader.Result.prototype.getAllExperimentalPositions=function(){var a=this.getSpectra(),b=[],c={};return a.forEach(function(a){var d=a.peptides;d.forEach(function(a){a.positions.forEach(function(a){c[a]||(b.push(a),c[a]=!0)})})}),b},MASCP.RippdbReader.Result.prototype.render=function(){},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.SnpReader=MASCP.buildService(function(a){return this._raw_data=a||{},this}),MASCP.SnpReader.SERVICE_URL="http://gator.masc-proteomics.org/snps.pl?",MASCP.SnpReader.prototype.requestData=function(){return{type:"GET",dataType:"json",data:{agi:this.agi,service:"nssnps"}}},MASCP.SnpReader.prototype.showSnp=function(a,b){var c=this.result.getSnp(b);if(!(c.length<1)){var d,e="all"+b,f=[],g=[];for(d=c.length-1;d>=0;d--)g.push({index:c[d][0],delta:c[d][1]}),f.push({insertBefore:c[d][0]+1,delta:c[d][2]});for(d=f.length-1;d>=0;d--)a.getAA(f[d].insertBefore-1).addAnnotation(e,1,{border:"rgb(150,0,0)",content:f[d].delta})}},MASCP.SnpReader.ALL_ACCESSIONS=["AGU","BAK2","BAY","BUR0","CDM0","COL0","DEL10","DOG4","DON0","EY152","FEI0","HKT24","ICE1","ICE102","ICE104","ICE106","ICE107","ICE111","ICE112","ICE119","ICE120","ICE127","ICE130","ICE134","ICE138","ICE150","ICE152","ICE153","ICE163","ICE169","ICE173","ICE181","ICE21","ICE212","ICE213","ICE216","ICE226","ICE228","ICE29","ICE33","ICE36","ICE49","ICE50","ICE60","ICE61","ICE63","ICE7","ICE70","ICE71","ICE72","ICE73","ICE75","ICE79","ICE91","ICE92","ICE93","ICE97","ICE98","ISTISU1","KASTEL1","KOCH1","KRO0","LAG22","LEO1","LER1","LERIK13","MER6","NEMRUT1","NIE12","PED0","PRA6","QUI0","RI0","RUE3131","SHA","STAR8","TUESB303","TUESCHA9","TUEV13","TUEWA12","VASH1","VIE0","WALHAESB4","XAN1"],MASCP.SnpReader.prototype.setupSequenceRenderer=function(a){var b=this;b.bind("resultReceived",function(){var c=b.result;MASCP.registerGroup("insertions"),MASCP.registerGroup("deletions"),a.withoutRefresh(function(){for(var d,e=c.getAccessions();e.length>0;){var f=e.shift(),g=f,h=c.getSnp(f);if(!(h.length<1)){d||(d=a.registerLayer("insertions_controller",{fullname:"nsSNPs",color:"#ff0000"}));var i="all"+f,j=f.indexOf("_")>=0?f.split("_")[0].toUpperCase():null;["SALK","MPICAO","GMI","MPISCHNEE","MPICOLLAB","JGI"].indexOf(j)<0?j=null:(j.match(/^MPI/)&&(j="MPI"),g=f.replace(/^[^_]+_/,""));var k=[],l=[];j&&(MASCP.registerGroup(j,{group:"insertions"}),a.registerLayer(j+"_controller",{fullname:j,group:"insertions",color:"#ff0000"}),a.createGroupController&&j&&a.createGroupController(j+"_controller",j));var m=a.registerLayer(i,{fullname:g,group:j||"insertions"});!function(a){return function(){var c=!1,d=i;m.href=function(e){return c="boolean"==typeof e?e:!c,c?(MASCP.getLayer(d).icon="#minus_icon",b.showSnp(MASCP.renderer,a)):(MASCP.getLayer(d).icon="#plus_icon",MASCP.renderer.removeAnnotations(d),MASCP.renderer.redrawAnnotations()),MASCP.renderer.refresh(),!1}}}(f)(),MASCP.getLayer(i).icon=null;var n;for(n=h.length-1;n>=0;n--)l.push({index:h[n][0]+1,delta:h[n][1]}),k.push({insertBefore:h[n][0]+1,delta:h[n][2]});for(n=k.length-1;n>=0;n--){var o=k[n].insertBefore-1;o>a.sequence.length&&(o=a.sequence.length);var p=a.getAA(o).addAnnotation("insertions_controller",1,{border:"rgb(150,0,0)",content:k[n].delta,angle:0});p._click||(p.addEventListener("click",function(c){var d=!1;return function(){d=!d,a.withoutRefresh(function(){b.result.getSnpsForPosition(c).forEach(function(a){b.showSnp(MASCP.renderer,a),MASCP.getLayer("all"+a).href(d)})}),a.refresh()}}(o),!1),p.style.cursor="pointer",p._click=!0)}}}MASCP.getGroup("insertions").size()>0&&a.createGroupController&&a.createGroupController("insertions_controller","insertions")}),a.redrawAnnotations("insertions_controller"),a.trigger("resultsRendered",[b])})},MASCP.SnpReader.Result.prototype.getAccessions=function(){var a=this._raw_data.data,b=[];for(var c in a)a.hasOwnProperty(c)&&b.push(c);return b},MASCP.SnpReader.Result.prototype.getSnp=function(a){var b=this._raw_data.data[a],c=[];for(var d in b)if(b.hasOwnProperty(d)){var e=parseInt(d,10)+1,f=b[d],g=[e,f.charAt(0),f.charAt(1)];c.push(g)}return c},MASCP.SnpReader.Result.prototype.getSnpsForPosition=function(a){var b=this;if(this._cached=this._cached||{},this._cached[a])return this._cached[a];var c=[];return this.getAccessions().forEach(function(d){b.getSnp(d).forEach(function(b){return b[0]==a?void c.push(d):void 0})}),this._cached[a]=c,c},MASCP.cloneService(MASCP.SnpReader,"RnaEditReader"),MASCP.RnaEditReader.SERVICE_URL="?",MASCP.RnaEditReader.prototype.requestData=function(){return{type:"GET",dataType:"json",data:{agi:this.agi,service:"rnaedit"}}},MASCP.RnaEditReader.prototype.setupSequenceRenderer=function(a){var b=this;b.bind("resultReceived",function(){var c=b.result;a.withoutRefresh(function(){for(var b=c.getAccessions();b.length>0;){var d=b.shift(),e=c.getSnp(d);if(!(e.length<1)){var f="rnaedit",g=[],h=[];a.registerLayer(f,{fullname:"RNA Edit (mod)"});MASCP.getLayer(f).icon=null;var i;for(i=e.length-1;i>=0;i--)h.push({index:e[i][0]+1,delta:e[i][1]}),g.push({insertBefore:e[i][0]+1,delta:e[i][2]});for(i=g.length-1;i>=0;i--){var j=g[i].insertBefore-1;j>a.sequence.length&&(j=a.sequence.length),a.getAA(j).addAnnotation("rnaedit",1,{border:"rgb(150,0,0)",content:g[i].delta,angle:"auto"})}}}}),a.trigger("resultsRendered",[b])})},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.SubaReader=MASCP.buildService(function(a){return this._raw_data=a,this}),MASCP.SubaReader.SERVICE_URL="http://suba.plantenergy.uwa.edu.au/services/byAGI.php?",MASCP.SubaReader.prototype.requestData=function(){return{type:"GET",dataType:"json",data:{agi:this.agi,service:"suba"}}},MASCP.SubaReader.Result=MASCP.SubaReader.Result,MASCP.SUBA_FIELDS={location_gfp:null,location_ipsort:null,location_loctree:null,location_mitopred:null,location_mitoprot2:null,location_ms:null,location_multiloc:null,location_preoxp:null,location_predotar:null,location_subloc:null,location_swissprot:null,location_targetp:null,location_wolfpsort:null},MASCP.SubaReader.Result.prototype._getLocalisation=function(a){for(var b={},c=!1,d=0;d<this._raw_data.observed.length;d++){var e=this._raw_data.observed[d];e[2]==a&&(b[e[0]]||(b[e[0]]=[]),b[e[0]].push(e[1]),c=!0)}return c?b:null},MASCP.SubaReader.Result.prototype._parseLocalisation=function(a){if(null===a||0===a.length)return null;var b,c=a.split(";"),d={};for(b=c.length-1;b>=0;b--){var e=c[b].split(":");d[e[0]]=d[e[0]]||[],d[e[0]].push(e[1])}return d},MASCP.SubaReader.Result.prototype._sortLocalisation=function(a){var b=[];for(var c in a)a.hasOwnProperty(c)&&b.push(c);return b=b.sort(function(b,c){return a[b].length-a[c].length})},MASCP.SubaReader.Result.prototype.getMassSpecLocalisation=function(){return this._getLocalisation("ms")},MASCP.SubaReader.Result.prototype.getGfpLocalisation=function(){return this._getLocalisation("gfp")},MASCP.SubaReader.Result.prototype.getWinnerTakesAllGfp=function(){var a,b=this.getGfpLocalisation(),c=this._sortLocalisation(b),d=[],e=-1;for(a=c.length-1;a>=0;a--)if(e&&b[c[a]]==e)d.push(c[a]);else{if(!(0>e))break;e=b[c[a]],d.push(c[a])}for(d._values=[],a=d.length-1;a>=0;a--)d._values.push(b[d[a]].length);return d},MASCP.SubaReader.Result.prototype.getWinnerTakesAllMassSpec=function(){var a,b=this.getMassSpecLocalisation(),c=this._sortLocalisation(b),d=[],e=-1;for(a=c.length-1;a>=0;a--)if(e&&b[c[a]]==e)d.push(c[a]);else{if(!(0>e))break;e=b[c[a]],d.push(c[a])}for(d._values=[],a=d.length-1;a>=0;a--)d._values.push(b[d[a]].length);return d},MASCP.SubaReader.Result.prototype.getPredictedLocalisations=function(){for(var a={},b=0;b<this._raw_data.predicted.length;b++)a[this._raw_data.predicted[b][0]]||(a[this._raw_data.predicted[b][0]]=[]),a[this._raw_data.predicted[b][0]].push(this._raw_data.predicted[b][1]);return a},MASCP.SubaReader.Result.prototype.mapController=function(a){console.log("Deprecated mapController")},MASCP.SubaReader.Result.prototype.render=function(){return null},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.TairReader=MASCP.buildService(function(a){return this._data=a||{},this._data.data||(this._data={data:["",""]}),this}),MASCP.TairReader.SERVICE_URL="http://gator.masc-proteomics.org/tair.pl?",MASCP.TairReader.prototype.requestData=function(){return{type:"GET",dataType:"json",data:{agi:this.agi,service:"tair"}}},MASCP.TairReader.Result.prototype.getDescription=function(){return this._data.data[1]},MASCP.TairReader.Result.prototype.getSequence=function(){return this._data.data[2]},MASCP.getSequence=function(a){var b=arguments.callee;return b._reader||(b._reader=new MASCP.TairReader,b._reader.async=!1),b._reader.result=null,b._reader.agi=a,b._reader.retrieve(),
b._reader.result?b._reader.result.getSequence():""},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.UbiquitinReader=MASCP.buildService(function(a){return this._raw_data=a,this}),MASCP.UbiquitinReader.SERVICE_URL="?",MASCP.UbiquitinReader.prototype.requestData=function(){var a=this.agi;return{type:"GET",dataType:"json",data:{agi:a,service:"ubiquitin"}}},MASCP.UbiquitinReader.Result=MASCP.UbiquitinReader.Result,MASCP.UbiquitinReader.Result.prototype.getPeptides=function(){return this._raw_data&&this._raw_data.data&&this._raw_data.data.peptides?this._raw_data.data.peptides:[]},MASCP.UbiquitinReader.Result.prototype._cleanSequence=function(a){return a.replace(/[^A-Z]/g,"")},MASCP.UbiquitinReader.prototype.setupSequenceRenderer=function(a){var b=this,c=".active .overlay { background: #666666; } .active a { color: #000000; text-decoration: none !important; }  :indeterminate { background: #ff0000; } .tracks .active { background: #0000ff; } .inactive a { text-decoration: none; } .inactive { display: none; }";return this.bind("resultReceived",function(){var d=this.result.getPeptides(),e="ubiquitin_experimental",f="ubiquitin_peptides",g=[];d.length>0&&(MASCP.registerLayer(e,{fullname:"UBQ (mod)",color:"#666666",css:c}),MASCP.registerGroup(f,{fullname:"UBQ",hide_member_controllers:!0,hide_group_controller:!0,color:"#666666"}),a.createGroupController&&a.createGroupController(e,f),bean.add(MASCP.getGroup(f),"visibilityChange",function(b,c,d){c==a&&g.forEach(function(a){a.style.display=d?"none":"inline"})}));for(var h=0;h<d.length;h++){var i="ubiquitin_peptide_"+h;MASCP.registerLayer(i,{fullname:"Peptide",group:f,color:"#666666",css:c});var j=d[h].sequence,k=a.getAminoAcidsByPeptide(j);if(0!==k.length){k.addToLayer(i),g.push(k.addToLayer(i));for(var l=0;l<d[h].positions.length;l++)g=g.concat(k[d[h].positions[l]-1].addToLayer(e)),k[d[h].positions[l]-1].addToLayer(i)}}a.trigger("resultsRendered",[b])}),this},MASCP.UbiquitinReader.Result.prototype.getAllExperimentalPositions=function(){var a=this.getPeptides(),b=[],c={};return a.forEach(function(a){a.positions.forEach(function(a){c[a]||(b.push(a),c[a]=!0)})}),b},MASCP.UbiquitinReader.Result.prototype.render=function(){},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.UnionDomainReader=MASCP.buildService(function(a){if(a){this._raw_data||(this._raw_data={data:{}});for(var b in a.data)this._raw_data.data[b]=a.data[b]}return this}),MASCP.UnionDomainReader.prototype.requestData=function(){var a=this,b=new MASCP.UniprotDomainReader,c=new MASCP.CddRunner;MASCP.Service.CacheService(c);var d,e;c.bind("running",function(){bean.fire(a,"running")});var f=function(a,b){var c=Object.keys(b.data);return c.forEach(function(c){"tmhmm-TMhelix"==c&&a.data["uniprot-TMhelix"]&&delete a.data["uniprot-TMhelix"],a.data[c]=b.data[c]}),a.data["uniprot-TMhelix"]&&(a.data["tmhmm-TMhelix"]=a.data["uniprot-TMhelix"],delete a.data["uniprot-TMhelix"]),a},g=function(b){return b?(bean.fire(a,"error",[b]),bean.fire(MASCP.Service,"requestComplete"),a.requestComplete(),void(g=function(){})):void(d&&e&&(a._dataReceived(f(d,e)),a.gotResult(),a.requestComplete()))};return b.retrieve(this.agi,function(a){a||(d=this.result._raw_data),g(a)}),c.retrieve(this.agi,function(a){a||(e=this.result._raw_data),g(a)}),!1},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.UniprotReader=MASCP.buildService(function(a){if(a&&"string"==typeof a){var b,c=MASCP.UniprotReader.parseFasta(a);for(b in c)c.hasOwnProperty(b)&&(a={data:c[b]},this._raw_data=a)}return this._data=a||{},this._data.data||(this._data={data:["",""]}),this}),MASCP.UniprotReader.SERVICE_URL="http://gator.masc-proteomics.org/uniprot.pl?",MASCP.UniprotReader.prototype.requestData=function(){return{type:"GET",dataType:"txt",url:"http://www.uniprot.org/uniprot/"+this.agi.toUpperCase()+".fasta",data:{acc:this.agi,service:"uniprot"}}},MASCP.UniprotReader.Result.prototype.getDescription=function(){return this._data.data[1]},MASCP.UniprotReader.Result.prototype.getSequence=function(){return this._data.data[0]},MASCP.UniprotReader.parseFasta=function(a){var b=a.split(">"),c={};return b.forEach(function(a){var b=a.split(/\n/);if(!(b.length<=1)){var d=b.shift(),e=b.join(""),f=d.split("|"),g=f[1],h=f[2];c[g]=[e,h]}}),c},MASCP.UniprotReader.readFastaFile=function(a,b){var c=MASCP.UniprotReader.parseFasta(a),d=new MASCP.UserdataReader;return d.toString=function(){return"MASCP.UniprotReader"},d.map=function(a){return a.data},d.datasetname="UniprotReader",b(d),setTimeout(function(){d.avoid_database=!0,d.setData("UniprotReader",{data:c})},0),d},MASCP.UniprotReader.parseDomains=function(a){var b={};a=a.split(/\n/);var c=/FT\s+DOMAIN\s+(\d+)\s+(\d+)\s+(.*)/m,d=/FT\s+CARBOHYD\s+(\d+)\s+(\d+)\s+(.*)/m,e=/FT\s+SIGNAL\s+(\d+)\s+(\d+)\s+(.*)/m,f=/FT\s+TRANSMEM\s+(\d+)\s+(\d+)\s+(.*)/m;return a.forEach(function(a){var g=d.exec(a);if(g){var h=g[3];h=h.replace("...",".."),b[h]||(b[h]={peptides:[],name:h}),b[h].peptides.push([g[1],g[2]])}var g=c.exec(a);if(g){var h=g[3];h=h.replace(/;.*/,""),h=h.replace(/\.\s+\{.*\}?/,""),h=h.replace(/\.$/,""),h=h.replace(/\s+\d+$/,""),b[h]||(b[h]={peptides:[],name:h}),b[h].peptides.push([g[1],g[2]])}g=e.exec(a),g&&(b.SIGNALP||(b.SIGNALP={peptides:[],name:"SIGNALP"}),b.SIGNALP.peptides.push([g[1],g[2]])),g=f.exec(a),g&&(b["uniprot-TMhelix"]||(b["uniprot-TMhelix"]={peptides:[],name:"TMhelix"}),b["uniprot-TMhelix"].peptides.push([g[1],g[2]]))}),b},MASCP.UniprotReader.parseSecondaryStructure=function(a){var b;return a=a.split(/\n/),a.forEach(function(a){var c=/FT\s+(STRAND)\s+(\d+)\s+(\d+)/m,d=/FT\s+(HELIX)\s+(\d+)\s+(\d+)/m,e=/FT\s+(TURN)\s+(\d+)\s+(\d+)/m;[c,d,e].forEach(function(c){var d=c.exec(a);d&&(b&&b[d[1]]||(b={STRAND:{peptides:[]},HELIX:{peptides:[]},TURN:{peptides:[]}}),d&&b[d[1]].peptides.push([d[2],d[3]]))})}),b},MASCP.UniprotDomainReader=MASCP.buildService(function(a){if(a&&"string"==typeof a){var b=MASCP.UniprotReader.parseDomains(a);a={data:b},this._raw_data=a}return this}),MASCP.UniprotDomainReader.prototype.requestData=function(){return{type:"GET",dataType:"txt",url:"http://www.uniprot.org/uniprot/"+this.agi.toUpperCase()+".txt",data:{acc:this.agi,service:"uniprot"}}},MASCP.UniprotSecondaryStructureReader=MASCP.buildService(function(a){if(a&&"string"==typeof a){var b=MASCP.UniprotReader.parseSecondaryStructure(a);if(!b)return null;a={data:b},this._raw_data=a}else a&&(this._raw_data=a);return this}),MASCP.UniprotSecondaryStructureReader.prototype.requestData=function(){return{type:"GET",dataType:"txt",url:"http://www.uniprot.org/uniprot/"+this.agi.toUpperCase()+".txt",data:{acc:this.agi,service:"uniprot"}}},MASCP.UniprotSecondaryStructureReader.prototype.setupSequenceRenderer=function(a,b){this.bind("resultReceived",function(){this.result&&this.result._raw_data.data&&(b.track||MASCP.registerLayer("secstructure",{fullname:"Secondary structure",color:"#0f0"}),this.result._raw_data.data.STRAND.peptides.forEach(function(c){var d=parseInt(c[0]),e=parseInt(c[1]);a.getAA(d).addBoxOverlay(b.track||"secstructure",e-d,1,{fill:"#9AFF9A"})}),this.result._raw_data.data.HELIX.peptides.forEach(function(c){var d=parseInt(c[0]),e=parseInt(c[1]);a.getAA(d).addBoxOverlay(b.track||"secstructure",e-d,1,{fill:"#7EB6FF"})}),this.result._raw_data.data.TURN.peptides.forEach(function(c){var d=parseInt(c[0]),e=parseInt(c[1]);a.getAA(d).addBoxOverlay(b.track||"secstructure",e-d,1,{fill:"#F0A"})})),a.trigger("resultsRendered",[this])})},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.UserdataReader=MASCP.buildService(function(a){return a?(this._raw_data=a,this):this}),MASCP.UserdataReader.prototype.toString=function(){return"MASCP.UserdataReader."+this.datasetname},MASCP.UserdataReader.prototype.requestData=function(){var a=this.agi.toUpperCase();return{type:"GET",dataType:"json",data:{agi:a,service:this.datasetname}}},MASCP.UserdataReader.prototype.setupSequenceRenderer=function(a){},function(){var a=function(a){var b=this.map,c=a.data,d=c.shift(),e={},f=d.indexOf(b.id),g=[];for(var h in b)"id"!=h&&b.hasOwnProperty(h)&&g.push({name:h,index:d.indexOf(b[h])});for(;c.length>0;){var i=c.shift(),j=i[f].toLowerCase();e[j]||(e[j]={data:{}});var k,l=e[j];for(k=g.length-1;k>=0;k--)l.data[g[k].name]||(l.data[g[k].name]=[]),l.data[g[k].name]=l.data[g[k].name].concat((i[g[k].index]||"").split(","));l.retrieved=a.retrieved,l.title=a.title,a.etag&&(l.etag=a.etag)}return e};MASCP.UserdataReader.prototype.setData=function(b,c){if(c){var d=this;MASCP.Service.CacheService(this),this.datasetname=b,c.retrieved||(c.retrieved=new Date),c.title||(c.title=b),d.title=c.title;var e={};if("object"==typeof this.map&&(e=a.call(this,c)),"function"==typeof this.map){if(this.map.callback){var f=arguments.callee;return void this.map(c,function(a){d.map=function(a){return a},f.call(d,b,a)})}e=this.map(c)}if(this.map){this.data=e;var g=new MASCP.UserdataReader;g.toString=function(){return d.toString()},g.data=e,g.retrieve=function(a,b){this.agi=a,b.call(this)},MASCP.Service.CacheService(g);var h,i=[];for(h in e)e.hasOwnProperty(h)&&(h.match(/[A-Z]/)&&(e[h.toLowerCase()]=e[h],delete e[h],h=h.toLowerCase()),i.push(h));var j=i.length,k=this.retrieve;return this.retrieve=function(a,b){console.log("Data not ready! Waiting for ready state");var c=this;bean.add(c,"ready",function(){bean.remove(c,"ready",arguments.callee),c.retrieve(a,b)})},i.length<1?void setTimeout(function(){d.retrieve=k,bean.fire(d,"ready",[c])},0):void MASCP.Service.BulkOperation(function(a){if(a)return void bean.fire(d,"error",[a]);var b=this.transaction;g.avoid_database=!0,g.retrieve(i[0],function(){for(;i.length>0;){var a=i.shift();if(bean.fire(d,"progress",[100*((j-i.length)/j),j-i.length,j]),g.agi=a,g._dataReceived(e[a]),0===i.length)return d.retrieve=k,void b(function(a){a?bean.fire(d,"error"):bean.fire(d,"ready",[c])})}})})}}},MASCP.UserdataReader.datasets=function(a,b){MASCP.Service.FindCachedService(this,function(c){for(var d=[],e=0,f=c.length;f>e;e++)d.push(c[e].replace(/MASCP.UserdataReader./,""));d.forEach&&d.forEach(a),b&&b()})}}(),"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.ClustalRunner=MASCP.buildService(function(a){return this._raw_data=a,a&&"string"==typeof a&&(this._raw_data={data:{sequences:this.getSequences(),alignment:this.getAlignment()}}),this}),MASCP.ClustalRunner.SERVICE_URL="http://www.ebi.ac.uk/Tools/services/rest/clustalw2/run/",MASCP.ClustalRunner.hash=function(a){var b=0;for(i=0;i<a.length;i++)char=a.charCodeAt(i),b=char+(b<<6)+(b<<16)-b;return b},MASCP.ClustalRunner.prototype.requestData=function(){var a=[].concat(this.sequences||[]),b=this;if(this.agi=MASCP.ClustalRunner.hash(this.sequences.join(","))+"",!MASCP.ClustalRunner.SERVICE_URL.match(/ebi/))return{type:"POST",dataType:"json",data:{sequences:a.join(",")}};if(bean.fire(b,"running"),this.job_id)return{type:"GET",dataType:"txt",url:"http://www.ebi.ac.uk/Tools/services/rest/clustalw2/status/"+this.job_id};if(this.result_id)return{type:"GET",dataType:"txt",url:"http://www.ebi.ac.uk/Tools/services/rest/clustalw2/result/"+this.result_id+"/aln-clustalw"};for(var c=0;c<a.length;c++)a[c]=">seq"+c+"\n"+a[c];return{type:"POST",dataType:"txt",data:{sequence:escape(a.join("\n")+"\n"),email:"joshi%40sund.ku.dk"}}},function(a){var b=a.prototype._dataReceived;a.prototype._dataReceived=function(a,c){if(null===a)return b.call(this,null,c);if("object"==typeof a){if(a.status&&"RUNNING"==a.status){var d=this;return bean.fire(d,"running"),setTimeout(function(){d.retrieve(d.agi)},5e3),void console.log("Got back running status")}return b.call(this,a,c)}if("string"==typeof a&&a.match(/^clustalw/))return this.job_id=a,void this.retrieve(this.agi);if(a.match(/FINISHED/)){this.result_id=this.job_id,this.job_id=null;var d=this;return void setTimeout(function(){d.retrieve(d.agi)},500)}if(a.match(/RUNNING/)){var d=this;return void setTimeout(function(){d.retrieve(d.agi)},500)}return b.call(this,a,c)}}(MASCP.ClustalRunner),function(){var a=function(a){var b,c=[],d={};for(b in a)a.hasOwnProperty(b)&&parseInt(b)>=-1&&c.push(parseInt(b));c=c.sort(function(a,b){return a-b});for(var e=c.length-1;e>=0;e--){var f=e-1;b=parseInt(c[e]);for(var g=a[b];f>=0;)b-=a[c[f]].length,f--;g.match(/^\s+$/)||(d[b+1]=g+(d[b+1]||""))}return d},b=function(a,b,c){for(var d=0;d<a.length;d++){var e=a[d].toString();"-"!=e.charAt(b)?(c[d]||(c[d]={},c[d][-1]=""),c[d][b-1]=e.charAt(b),c[d][b]&&c[d][b].match(/\w/)&&(c[d][b-1]+=c[d][b],delete c[d][b])):c[d]&&(c[d][b-1]=" ",(c[d][b]||"").match(/^\s+$/)&&(c[d][b-1]+=c[d][b],delete c[d][b])),a[d]=e.slice(0,b)+e.slice(b+1)}};MASCP.ClustalRunner.Result.prototype.alignToSequence=function(c){this._orig_raw_data?this._raw_data=JSON.parse(this._orig_raw_data):this._orig_raw_data=JSON.stringify(this._raw_data);var d=this._raw_data.data.sequences.concat([this._raw_data.data.alignment]),e=[],f=d[c],g=f.length-1;for(g;g>=0;g--)"-"==f.charAt(g)&&b(d,g,e);for(g=0;g<d.length;g++)if(e[g]&&g!=c){e[g]=a(e[g]);var h=d[g];d[g]={sequence:h,insertions:e[g]},d[g].toString=function(){return this.sequence}}this._raw_data.data.alignment=d.pop(),this._raw_data.data.sequences=d},MASCP.ClustalRunner.Result.prototype.calculatePositionForSequence=function(a,b){for(var c=this._raw_data.data.sequences[a].insertions||{},d=0,e=this._raw_data.data.sequences[a].toString(),f=0;f<e.length;f++)if(c[f]&&(d+=c[f].length),d+=1,"-"==e.charAt(f)&&(d-=1),d>=b)return b==d?f+1:(0==f&&(f=1),-1*f);return-1*e.length},MASCP.ClustalRunner.Result.prototype.calculateSequencePositionFromPosition=function(a,b){for(var c=this._raw_data.data.sequences[a].insertions||{},d=0,e=this._raw_data.data.sequences[a].toString(),f=0;b>f;f++)c[f]&&(d+=c[f].length),d+=1,"-"==e.charAt(f)&&(d-=1);return 0==d&&(d+=1),d}}(),MASCP.ClustalRunner.prototype.setupSequenceRenderer=function(a){var b=this;a.sequences=b.sequences,a.addAxisScale("clustal",function(a,c,d){var e=b.sequences.map(function(a){return a.agi}).indexOf(c.name.toLowerCase());return 0>e?a:d?b.result.calculateSequencePositionFromPosition(e,a):b.result.calculatePositionForSequence(e,a)}),a.forceTrackAccs=!0;var c=[],d="isoform_controller",e="isoforms",f=function(a,b){var c,d=-3,e=-2,f=a.group();c=a.line(e+1,d+4,e+3,d+1),c.setAttribute("stroke","#fcc"),c.setAttribute("stroke-width","10"),f.push(c),c=a.line(e+1,d+6,e+3,d+3),c.setAttribute("stroke","#fcc"),c.setAttribute("stroke-width","10"),f.push(c),c=a.line(e+1,d+4,e+3,d+3),c.setAttribute("stroke","#fcc"),c.setAttribute("stroke-width","5"),f.push(c),c=a.line(e+1,d+5.3,e+1,d+5.8),c.setAttribute("stroke","#fcc"),c.setAttribute("stroke-width","10"),f.push(c),c=a.line(e+1,d+5.9,e+1.5,d+5.9),c.setAttribute("stroke","#fcc"),c.setAttribute("stroke-width","10"),f.push(c);var g=a.circle(e+2.8,d+1.75,1);g.setAttribute("fill","#fff"),g.setAttribute("stroke","#ccc"),g.setAttribute("stroke-width","10"),f.push(g);var h=a.text(e+2.25,d+2.25,(b||"÷")+"");return h.setAttribute("fill","#ccc"),h.setAttribute("font-size",75),f.push(h),a.firstChild.nextSibling.appendChild(f),f},g=function(h){for(var i=b.result;c.length>0;){var j=c.shift();a.remove(j.layer,j)}i.alignToSequence(h||0);var k=i.getSequences();if(!a.sequence)return void a.setSequence(k[h])(function(){a.sequences=b.sequences,MASCP.registerGroup(e,"Aligned"),MASCP.registerLayer(d,{fullname:"Conservation",color:"#000000"}),a.trackOrder.indexOf(d)<0&&(a.trackOrder=a.trackOrder.concat([d])),a.showLayer(d),a.createGroupController(d,e),g(h)});a.sequence=k[h],a.redrawAxis();var l=i.getAlignment().split("");c=c.concat(a.renderTextTrack(d,i.getAlignment().replace(/ /g," "))),c.slice(-1)[0].setAttribute("data-spaces","true"),c.slice(-1)[0].layer=d;for(var m=["*",":","."," "].reverse(),n=0;n<l.length;n++)c.push(a.getAA(n+1,d).addBoxOverlay(d,1,m.indexOf(l[n])/4,{merge:!0})),c.slice(-1)[0].layer=d;for(var n=0;n<k.length;n++){var o=b.sequences[n].agi.toUpperCase()||"missing"+n,p=MASCP.registerLayer(o,{fullname:b.sequences[n].name||o.toUpperCase(),group:e,color:"#ff0000"});p.fullname=b.sequences[n].name||o.toUpperCase();var q=a.renderTextTrack(o,k[n].toString());q[0].setAttribute("dy","-1ex"),c=c.concat(q),c.slice(-1)[0].layer=o,a.trackOrder.indexOf(o.toUpperCase())<0&&(console.log("Adding ",o," to renderer"),a.trackOrder=a.trackOrder.concat([e]));if(k[n].insertions)for(var r in k[n].insertions){var s=k[n].insertions;if(!(0==r&&""==s[r]||s[r].length<1)){var t=s[r].length;0==r&&(r=1);var u=f(a._canvas,t);u.setAttribute("fill","#ffff00");var v=a.getAA(r,d).addToLayer(o,{content:u,bare_element:!0,height:10,offset:-5,no_tracer:!0})[1];v.container.setAttribute("height","300"),v.container.setAttribute("viewBox","-50 -100 200 300"),c.push(v),c.slice(-1)[0].layer=o}}}a.zoom=1,a.showGroup(e),a.refresh()};this.bind("resultReceived",function(){var b=this;g(0),b.result.aligned_idx=0;var c=[];b.sequences.forEach(function(a){c.push(a.agi.toUpperCase())}),a.bind("orderChanged",function(e){b.result&&(b.result.aligned_idx=c.indexOf(e[e.indexOf(d)+1]),g(b.result.aligned_idx),a.refreshScale())})})},MASCP.ClustalRunner.Result.prototype.getSequences=function(){if(this._raw_data&&this._raw_data.data&&this._raw_data.data.sequences)return[].concat(this._raw_data.data.sequences);for(var a=this._raw_data.match(/seq\d+(.*)/g),b=[],c=0;c<a.length;c++){var d=a[c].match(/seq(\d+)\s+(.*)/);b[d[1]]||(b[d[1]]=""),b[d[1]]+=d[2]}return b},MASCP.ClustalRunner.Result.prototype.getAlignment=function(){if(this._raw_data&&this._raw_data.data&&this._raw_data.data.alignment)return this._raw_data.data.alignment.toString();this._text_data=this._raw_data;for(var a=/ {16}(.*)/g,b="",c=a.exec(this._raw_data);null!==c;)b+=c[1],c=a.exec(this._raw_data);return b},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";if(MASCP.HydropathyRunner=MASCP.buildService(function(a){return this._raw_data=a,this}),MASCP.HydropathyRunner.prototype.retrieve=function(){bean.fire(this,"resultReceived")},MASCP.HydropathyRunner.prototype.setupSequenceRenderer=function(a,b){this.bind("resultReceived",function(){var c=5;b=b||{};for(var d={A:1.8,R:-4.5,N:-3.5,D:-3.5,C:2.5,Q:-3.5,E:-3.5,G:-.4,H:-3.2,I:4.5,L:3.8,K:-3.9,M:1.9,F:2.8,P:-1.6,S:-.8,T:-.7,W:-.9,Y:-1.3,V:4.2},e=[],f=0;c>f;f++)e[f]=0;for(var f=c;f<a._sequence_els.length-c;f++){for(var g=0,h=-1*c;c>=h;h++)g+=d[a._sequence_els[f+h].amino_acid[0]]/(2*c+1);e.push(g)}b.track||MASCP.registerLayer("hydropathy",{fullname:"Hydropathy plot",color:"#f00"}),a.addValuesToLayer(b.track||"hydropathy",e,b),a.trigger("resultsRendered",[this])})},"undefined"==typeof MASCP||"undefined"==typeof MASCP.Service)throw"MASCP.Service is not defined, required class";MASCP.PrideRunner=MASCP.buildService(function(a){return this._raw_data=a,this}),MASCP.PrideRunner.SERVICE_URL="http://www.ebi.ac.uk/pride/biomart/martservice",MASCP.PrideRunner.prototype.requestData=function(){var a=([].concat(this.identifiers||[]),this);if(!this._endpointURL.match(/ebi\.ac/))return{type:"GET",dataType:"json",data:{agi:a.agi,service:"pride"}};return bean.fire(a,"running"),{type:"GET",dataType:"txt",data:{query:encodeURIComponent('<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE Query><Query  virtualSchemaName = "default" formatter = "CSV" header = "0" uniqueRows = "0" count = "" datasetConfigVersion = "0.6" ><Dataset name = "pride" interface = "default" ><Filter name = "submitted_accession_option" value = "'+a.agi+'"/><Attribute name = "peptide_sequence" /><Attribute name = "start_coord" /><Attribute name = "end_coord" /></Dataset></Query>')}}},MASCP.PrideRunner.prototype.setupSequenceRenderer=function(a,b){b||(b={}),this.bind("resultReceived",function(){var c=[],d=0;this.result._raw_data.data.forEach(function(b){if(!(b.peptide.length<1)){var e=a.getAminoAcidsByPeptide(b.peptide);!e||e.length<b.peptide.length||a.getAminoAcidsByPeptide(b.peptide).forEach(function(a){c[a._index]=c[a._index]||0,c[a._index]+=b.count,c[a._index]>d&&(d=c[a._index])})}});for(var e=[],f=0;f<a.sequence.length;f++)c[f]?e.push(c[f]/d):e.push(0);var g=a.addValuesToLayer(b.track||this.agi,e,{height:12,offset:isNaN(b.offset)?0:b.offset,label:{max:d+" PRIDE peptides"}});g.setAttribute("stroke","#00f"),a.trigger("resultsRendered",[this])})},function(a){var b=a.prototype._dataReceived;a.prototype._dataReceived=function(a,c){if(null===a)return b.call(this,null,c);if("object"==typeof a&&a.status&&"RUNNING"==a.status){var d=this;return bean.fire(d,"running"),setTimeout(function(){d.retrieve(d.agi)},5e3),void console.log("Got back running status")}if("string"==typeof a){var e=[],f={};a.split("\n").forEach(function(a){var b=a.split(",");b.length<1||(f[b[0]]?(f[b[0]].count++,b[1]&&(f[b[0]].start=b[1],f[b[0]].end=b[2])):(f[b[0]]={peptide:b[0],start:b[1],end:b[2],count:1},e.push(f[b[0]])))}),a=e}return b.call(this,a,c)}}(MASCP.PrideRunner),MascotToJSON=function(){},function(){var a={file:"",do_export:"1",export_format:"CSV",protein_master:"1",peptide_master:"1",pep_seq:"1",pep_score:"0",REPORT:"AUTO",show_same_sets:"1",_requireboldred:"1",_ignoreionsscorebelow:"0.05",prot_hit_num:"0",pep_end:"0",pep_miss:"0",pep_homol:"0",pep_ident:"0",pep_frame:"0",pep_var_mod:"0",pep_num_match:"0",pep_scan_title:"0",pep_query:"0",pep_rank:"0",pep_isbold:"0",pep_exp_mz:"0",pep_calc_mr:"0",pep_exp_z:"0",pep_exp_mr:"0",pep_delta:"0",_sigthreshold:"0.05",_showallfromerrortolerant:"0",_onlyerrortolerant:"0",_noerrortolerant:"0",_show_decoy_report:"0",_showsubsets:"0",_server_mudpit_switch:"0.000000001"},b=function(a){if(null===a||"object"!=typeof a)return a;var c=a.constructor();for(var d in a)a.hasOwnProperty(d)&&(c[d]=b(a[d]));return c},c=function(a){var b=[];for(var c in a)a.hasOwnProperty(c)&&b.push(c+"="+a[c]);return b.join("&")},d=function(a,b){b=b||",";for(var c=new RegExp("(\\"+b+'|\\r?\\n|\\r|^)(?:"([^"]*(?:""[^"]*)*)"|([^"\\'+b+"\\r\\n]*))","gi"),d=[[]],e=null;null!==(e=c.exec(a));){var f=e[1];f.length&&f!=b&&d.push([]);var g;g=e[2]?e[2].replace(new RegExp('""',"g"),'"'):e[3],d[d.length-1].push(g)}return d},e=function(a){var b=[],c=null,d={};return a.forEach(function(a){a[1]&&""!==a[1]&&(c=a[1]);var e=a[6]+a[7]+a[8];e&&!d[c+e]&&b.push([c,e]),d[c+e]=1}),b};MascotToJSON.prototype.convertReport=function(f,g){var h=this,i=new window.XMLHttpRequest,j=f.replace(/master_results(_2)?.pl.*/,"export_dat_2.pl"),k=(/file=([^&]*)/.exec(f)||[]).shift(),l=b(a);l.file=k,i.onreadystatechange=function(){if(4==i.readyState)if(200==i.status){var a=i.responseText;a=a.replace(/(.+\n)+\n.*\n/m,""),g&&g.call(h,e(d(a)))}else 0===i.status&&g&&g.call(h,[],new Error("Could not load page"))},i.open("GET",j+"?"+c(l),!0),i.send(null)}}(),"undefined"!=typeof module&&module.exports&&(module.exports.MascotToJSON=MascotToJSON),"undefined"!=typeof document&&"registerElement"in document&&!function(){var a=function(a,b){a.match(/^(https?:\/)?\//)&&MASCP.Service.request(a,b,!0)},b=function(b,c){sessionStorage.renderer_caches||(sessionStorage.renderer_caches=JSON.stringify({}));var d=JSON.parse(sessionStorage.renderer_caches);return d[b]?(console.log("Going to cache for renderer at "+b),void c.call(null,null,d[b])):void a(b,function(a,d){if(a)return void c.call(null,a);var e=JSON.parse(sessionStorage.renderer_caches);e[b]=d,sessionStorage.renderer_caches=JSON.stringify(e),c.call(null,null,d)})},c=function(a,b,c,d,e){c.preferences={getPreferences:function(a){a.call(c,null,b)}};var f=(b.render_options||{}).track?b.render_options.track:d;if(b&&b.icons||(b.render_options||{}).icons){var g=b.icons||(b.render_options||{}).icons;MASCP.Service.request(g.url,function(a,b){b&&e.importIcons(g.namespace,b.documentElement)},"xml")}"liveClass"!=b.type&&"reader"!=b.type||c.registerSequenceRenderer(e,b.render_options||{});var h=function(){if(this.result){e.trackOrder.indexOf(f)<0&&(MASCP.registerLayer(f,{fullname:f},[e]),e.trackOrder.push(f),e.showLayer(f)),MASCP.getLayer(f)&&!MASCP.getLayer(f).disabled||MASCP.registerLayer(f,{fullname:f},[e]);var a=this.result._raw_data.data;return b.render_options.renderer&&JSandbox?void function(g,h){if(g)return void window.notify.alert("Could not render "+b.title);var i=new JSandbox,j=e.sequence;!function(){var a={gotResult:function(){j=e.sequence},agi:d};e.trigger("readerRegistered",[a]),a.gotResult()}(),i.eval(h,function(){this.eval({data:"renderData(input.sequence,input.data,input.acc)",input:{sequence:j,data:a,acc:d},onerror:function(a){console.log(b.title),console.log("Errored out"),console.log(a)},callback:function(a){i.terminate();var g={gotResult:function(){a.forEach(function(a){var c=parseInt((b.render_options||{}).offset||0);if(a.options){if(a.options.offset)return void(a.options.offset+=c);a.options.offset=c}else a.options={offset:c}});var d=e.renderObjects(f,a);c.resetOnResult(e,d,f),e.trigger("resultsRendered",[c]),e.refresh()},agi:d};e.trigger("readerRegistered",[g]),g.gotResult()}})})}(null,b.render_options.renderer):void 0}};c.bind("resultReceived",h),c.retrieve(d)},d=null,e=function(){var a=Object.create(HTMLElement.prototype,{type:{get:function(){return this.readerType},set:function(a){this.readerType=a,this.setAttribute("type",a)}},track:{get:function(){return this.readerTrack},set:function(a){this.readerTrack=a,this.setAttribute("track",a)}},name:{get:function(){return this.readerTitle},set:function(a){this.readerTitle=a,this.setAttribute("name",a)}},rendererUrl:{set:function(a){this.rendererUrl=a},get:function(){return this.rendererUrl}},renderer:{set:function(a){this.renderFunc=a},get:function(){return this.renderFunc}}});a.createdCallback=function(){var a=this;this.renderFunc="",this.getAttribute("type")&&(this.type=this.getAttribute("type")),this.getAttribute("rendererurl")&&b(this.getAttribute("rendererurl"),function(b,c){b||(a.renderer=c)})},a.attributeChangedCallback=function(a,c,d){"name"==a&&this.name!==d&&(this.name=d),"type"==a&&this.type!==d&&(this.type=d),"track"==a&&this.track!=d&&(this.track=d),"rendererurl"==a&&b(d,function(a,b){a||(this.renderer=b)})},a._generateConfig=function(){var a={};return this.config_id?(a[this.config_id]={type:this.type,title:this.name,render_options:{track:this.track,renderer:this.renderFunc&&"function"==typeof this.renderFunc?"var renderData = "+this.renderFunc.toString():this.renderFunc,icons:{url:"/sugars.svg",namespace:"sugar"}},data:this.data},a):a},Object.defineProperty(a,"configuration",{get:function(){return this._generateConfig()}}),d=a;var c=document.registerElement("gator-reader",{prototype:a});return c}(),f=(function(){var a=Object.create(d,{href:{get:function(){return this.config_id},set:function(a){this.config_id=a}},type:{get:function(){return"gatorURL"}}});return a.createdCallback=function(){this.getAttribute("href")&&(this.href=this.getAttribute("href")),d.createdCallback.apply(this)},a.attributeChangedCallback=function(a,b,c){"href"==a&&c!==this.href&&(this.href=c),d.attributeChangedCallback.apply(this)},document.registerElement("gator-gatorurl",{prototype:a}),a}(),function(){var a=Object.create(d,{type:{get:function(){return"reader"}},config_id:{get:function(){return this._config_id}},data:{get:function(){return this._data},set:function(a){this._data=a,this.dataChanged()}}}),b=function(){var a=new MASCP.UserdataReader;return a.map=function(a){var b={};for(var c in a)"retrieved"!=c&&"title"!=c&&(a[c].data?b[c]=a:b[c]={data:a[c]},b[c].retrieved=a.retrieved,b[c].title=a.title);return b},a.datasetname=this.config_id,a.setData(this.config_id,this.data),a};return a.dataChanged=function(){this._reader&&(this._reader.bind("ready",function(){this.unbind("ready",arguments.callee),this.agi&&this.retrieve(this.agi)}),this._reader.setData(this._reader.datasetname,this.data))},a.createdCallback=function(){this._config_id="local-"+(new Date).getTime(),d.createdCallback.apply(this),this._reader=b.call(this)},a._generateConfig=function(){var a=d._generateConfig.call(this);return a[this._config_id].reader=this._reader,a},a.attributeChangedCallback=function(a,b,c){d.attributeChangedCallback.apply(this)},document.registerElement("gator-localdata",{prototype:a}),a}(),function(){var a=Object.create(d,{type:{get:function(){return"reader"}},config_id:{get:function(){return this._config_id}},data:{get:function(){return this._reader.data},set:function(a){this._reader.data=a}},boxTags:{get:function(){return this._reader.boxTags},set:function(a){this._reader.boxTags=a}},symbolTags:{get:function(){return this._reader.symbolTags},set:function(a){this._reader.symbolTags=a}}}),b=function(){var a=new MASCP.EditableReader;return a};return a.createdCallback=function(){this._config_id="editable-"+(new Date).getTime(),d.createdCallback.apply(this),this._reader=b.call(this)},a._generateConfig=function(){var a=d._generateConfig.call(this);return a[this._config_id].reader=this._reader,a},a.attributeChangedCallback=function(a,b,c){d.attributeChangedCallback.apply(this)},document.registerElement("gator-editabledata",{prototype:a}),a}(),function(){var a=Object.create(d,{type:{get:function(){return"liveClass"}},endpoint:{get:function(){return this._endpoint},set:function(a){this._endpoint=a}},config_id:{get:function(){return"DomainRetriever"}}});return a.createdCallback=function(){this.getAttribute("accepted")&&(this.accepted=this.getAttribute("accepted")),this.getAttribute("href")&&(this.endpoint=this.getAttribute("href")),d.createdCallback.apply(this)},a.attributeChangedCallback=function(a,b,c){d.attributeChangedCallback.apply(this)},a._generateConfig=function(){var a=d._generateConfig.call(this);return a.DomainRetriever.accepted_domains={type:"gatorURL",url:"http://glycodomain-data.glycocode.com/data/latest/spreadsheet:0Ai48KKDu9leCdHM5ZXRjdUdFWnQ4M2xYcjM3S0Izdmc"},this.endpoint&&(a.DomainRetriever.url=this.endpoint),a.DomainRetriever.render_options.renderer=null,a.DomainRetriever.render_options.offset=-4,a.DomainRetriever.render_options.height=8,a},document.registerElement("gator-domains",{prototype:a}),a}(),function(){var a=Object.create(HTMLElement.prototype,{});return a.attachedCallback=function(){},a.attributeChangedCallback=function(a,b,c){},a.go=function(){var a=this,b=this.readers.reduce(function(a,b){var c=b.configuration;for(var d in c)a[d]=c[d];return a},{});MASCP.IterateServicesFromConfig(b,function(b,d,e){c(b,d,e,a.parentNode.accession,a.parentNode.renderer)})},Object.defineProperty(a,"readers",{get:function(){for(var a=[],b=this.childNodes,c=0;c<b.length;c++)b[c]instanceof e&&a.push(b[c]);return a}}),document.registerElement("gator-reader-renderer",{prototype:a}),a}());(function(){var a=Object.create(f,{name:{get:function(){return this.trackName||this.parentNode.accession},set:function(a){this.trackName=a,this.setAttribute("name",a),b.apply(this)}},genomic:{get:function(){return this.trackGenomic},set:function(a){a?(this.trackGenomic=!0,this.setAttribute("genomic",!0)):(this.trackGenomic=!1,this.removeAttribute("genomic"))}}});a.createdCallback=function(){this.getAttribute("name")&&(this.name=this.getAttribute("name")),this.getAttribute("genomic")&&(this.genomic=this.getAttribute("genomic"))},a.attributeChangedCallback=function(a,b,c){"name"==a&&this.name!==c&&(this.name=c),"genomic"==a&&(c?this.genomic=!0:this.genomic=!1)};var b=function(){var a=this;this.readers.forEach(function(b){!b.track&&a.name&&(b.track=a.name)})};return a.go=function(){var a=this,c=MASCP.registerLayer(this.name,{fullname:this.name},[a.parentNode.renderer]);this.genomic?c.genomic=this.genomic:delete c.genomic,b.apply(this),f.go.apply(this)},document.registerElement("gator-track",{prototype:a}),a})()}();